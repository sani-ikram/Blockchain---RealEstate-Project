{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x01ffc9a7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x081812fc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenURI",
          "type": "string"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "setTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x09a3beef"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "success",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x0b93381b"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x15070401"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x17d7de7c"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenCount",
          "type": "uint256"
        }
      ],
      "name": "transferFromAdd",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x18d66476"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalTokenSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x1ca8b6cb"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupplyToken",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x27213345"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x27dc297e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2f745c59"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x38bbfa50"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42842e0e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "c",
              "type": "tuple"
            }
          ],
          "name": "proof",
          "type": "tuple"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x43cd76fc"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getbaseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x447ec2b7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4f6ccce7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6352211e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "c",
              "type": "tuple"
            }
          ],
          "name": "proof",
          "type": "tuple"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyzok",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x76f4317f"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x8456cb59"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOfAddress",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x86212b8f"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x893d20e8"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa22cb465"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb0b62f5a"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb88d4fde"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xc87b56dd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xce606ee0"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xd3fc9864"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setPause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xd431b1ac"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe985e9c5"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractERC721Mint",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xee383e49"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "solutionAdded",
      "type": "event",
      "signature": "0x3198a238243ab0d4aeea80d0f4f55a6a0a8cccb4e2b5a96c21685d6fc317cc91"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "NFTminted",
      "type": "event",
      "signature": "0x7ce8d607544a264139c536d3407e18b064e18a53c8037d0fe3c5fd89c96a7b02"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event",
      "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event",
      "signature": "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "unPaused",
      "type": "event",
      "signature": "0x2117a86d7496b6aed0459f1c7ddcff93ed4ab54d2fb577eea08c310cf98fcb4e"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "TransferOwnership",
      "type": "event",
      "signature": "0xcfaaa26691e16e66e73290fc725eee1a6b4e0e693a1640484937aac25ffb55a4"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "transferOwn",
      "type": "event",
      "signature": "0x361327a493efd7042c254832e6276bb0f482fbea82a049e6e81f04a5b42b77e4"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "addSolutions",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x9600a779"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "totalSupplyCount",
          "type": "uint256"
        },
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "tokenURI",
          "type": "string"
        },
        {
          "components": [
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "c",
              "type": "tuple"
            }
          ],
          "name": "proof",
          "type": "tuple"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "mintNFT",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x0e9de97e"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061024f576000357c0100000000000000000000000000000000000000000000000000000000900480634f6ccce71161014d578063a22cb465116100d5578063d3fc986411610099578063d3fc9864146106f8578063d431b1ac14610728578063e985e9c514610732578063ee383e4914610762578063f2fde38b146107805761024f565b8063a22cb46514610668578063b0b62f5a14610684578063b88d4fde1461068e578063c87b56dd146106aa578063ce606ee0146106da5761024f565b80638456cb591161011c5780638456cb59146105c257806386212b8f146105cc578063893d20e8146105fc5780638f32d59b1461061a5780639600a779146106385761024f565b80634f6ccce7146105025780636352211e1461053257806370a082311461056257806376f4317f146105925761024f565b806318d66476116101db5780632f745c591161019f5780632f745c591461044c57806338bbfa501461047c57806342842e0e1461049857806343cd76fc146104b4578063447ec2b7146104e45761024f565b806318d66476146103a85780631ca8b6cb146103d857806323b872dd146103f6578063272133451461041257806327dc297e146104305761024f565b80630b93381b116102225780630b93381b146103005780630e9de97e1461031e578063150704011461034e57806317d7de7c1461036c57806318160ddd1461038a5761024f565b806301ffc9a714610254578063081812fc14610284578063095ea7b3146102b457806309a3beef146102d0575b600080fd5b61026e60048036036102699190810190613e05565b61079c565b60405161027b9190614549565b60405180910390f35b61029e60048036036102999190810190613ee9565b610804565b6040516102ab91906144c7565b60405180910390f35b6102ce60048036036102c99190810190613c8f565b610889565b005b6102ea60048036036102e59190810190613e57565b610a36565b6040516102f79190614564565b60405180910390f35b610308610a4a565b6040516103159190614549565b60405180910390f35b61033860048036036103339190810190613f12565b610a5d565b6040516103459190614549565b60405180910390f35b610356610bb3565b6040516103639190614564565b60405180910390f35b610374610c55565b6040516103819190614564565b60405180910390f35b610392610cf7565b60405161039f9190614746565b60405180910390f35b6103c260048036036103bd9190810190613c8f565b610d04565b6040516103cf9190614549565b60405180910390f35b6103e0610ebc565b6040516103ed9190614746565b60405180910390f35b610410600480360361040b9190810190613b89565b610ec2565b005b61041a610ee5565b6040516104279190614746565b60405180910390f35b61044a60048036036104459190810190613d32565b610eef565b005b61046660048036036104619190810190613c8f565b610f32565b6040516104739190614746565b60405180910390f35b61049660048036036104919190810190613d86565b610fa5565b005b6104b260048036036104ad9190810190613b89565b610faa565b005b6104ce60048036036104c99190810190613eab565b610fca565b6040516104db9190614549565b60405180910390f35b6104ec61106f565b6040516104f99190614564565b60405180910390f35b61051c60048036036105179190810190613ee9565b611111565b6040516105299190614746565b60405180910390f35b61054c60048036036105479190810190613ee9565b611145565b60405161055991906144c7565b60405180910390f35b61057c60048036036105779190810190613b24565b6111f4565b6040516105899190614746565b60405180910390f35b6105ac60048036036105a79190810190613eab565b611244565b6040516105b99190614549565b60405180910390f35b6105ca611292565b005b6105e660048036036105e19190810190613b24565b611300565b6040516105f39190614746565b60405180910390f35b610604611312565b60405161061191906144c7565b60405180910390f35b61062261133b565b60405161062f9190614549565b60405180910390f35b610652600480360361064d9190810190613b24565b611392565b60405161065f9190614746565b60405180910390f35b610682600480360361067d9190810190613c53565b611543565b005b61068c611679565b005b6106a860048036036106a39190810190613bd8565b6116cc565b005b6106c460048036036106bf9190810190613ee9565b6116f2565b6040516106d19190614564565b60405180910390f35b6106e26117b9565b6040516106ef91906144c7565b60405180910390f35b610712600480360361070d9190810190613ccb565b6117df565b60405161071f9190614746565b60405180910390f35b61073061195a565b005b61074c60048036036107479190810190613b4d565b6119a3565b6040516107599190614549565b60405180910390f35b61076a611a37565b60405161077791906144c7565b60405180910390f35b61079a60048036036107959190810190613b24565b611a5d565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600061080f82611ab0565b61084e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610845906146e6565b60405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061089482611145565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fc90614586565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610945575061094481336119a3565b5b610984576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097b906146a6565b60405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6060610a428383611b22565b905092915050565b601a60009054906101000a900460ff1681565b600060011515610a6d8484611244565b151514610aaf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa6906145c6565b60405180910390fd5b600b8710610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae990614646565b60405180910390fd5b60008090505b601c805490508160ff1611610ba75760001515601c8260ff1681548110610b1b57fe5b906000526020600020906002020160010160009054906101000a900460ff1615151415610b9a57610b4d8787876117df565b50610b588587610a36565b507f7ce8d607544a264139c536d3407e18b064e18a53c8037d0fe3c5fd89c96a7b0286604051610b889190614746565b60405180910390a16001915050610ba9565b8080600101915050610af8565b505b9695505050505050565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c4b5780601f10610c2057610100808354040283529160200191610c4b565b820191906000526020600020905b815481529060010190602001808311610c2e57829003601f168201915b5050505050905090565b6060600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ced5780601f10610cc257610100808354040283529160200191610ced565b820191906000526020600020905b815481529060010190602001808311610cd057829003601f168201915b5050505050905090565b6000600880549050905090565b6000601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821015610d88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7f90614726565b60405180910390fd5b610dda82601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b3e90919063ffffffff16565b601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e6f82601760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9490919063ffffffff16565b601760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b60135481565b610ecc3382611be9565b610ed557600080fd5b610ee0838383611c7e565b505050565b6000601354905090565b610f2e828260006040519080825280601f01601f191660200182016040528015610f285781602001600182028038833980820191505090505b50610fa5565b5050565b6000610f3d836111f4565b8210610f4857600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610f9257fe5b9060005260206000200154905092915050565b505050565b610fc5838383604051806020016040528060008152506116cc565b505050565b600060606002604051908082528060200260200182016040528015610ffe5781602001602082028038833980820191505090505b50905060008090505b60028110156110465783816002811061101c57fe5b602002015182828151811061102d57fe5b6020026020010181815250508080600101915050611007565b5060006110538286611ca2565b1415611063576001915050611069565b60009150505b92915050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111075780601f106110dc57610100808354040283529160200191611107565b820191906000526020600020905b8154815290600101906020018083116110ea57829003601f168201915b5050505050905090565b600061111b610cf7565b821061112657600080fd5b6008828154811061113357fe5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e5906146c6565b60405180910390fd5b50919050565b600061123d600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611e14565b9050919050565b60006112508383610fca565b601a60006101000a81548160ff021916908315150217905550601a60009054906101000a900460ff1615611287576001905061128c565b600090505b92915050565b600060149054906101000a900460ff16156112ac57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336040516112f691906144e2565b60405180910390a1565b600061130b826111f4565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60006040518060600160405280601b5481526020016001151581526020018373ffffffffffffffffffffffffffffffffffffffff16815250601d6000601b5481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050601c601d6000601b54815260200190815260200160002090806001815401808255809150509060018203906000526020600020906002020160009091929091909150600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff0219169083151502179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050601c805490509050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561157c57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161166d9190614549565b60405180910390a35050565b60008060146101000a81548160ff0219169083151502179055507f2117a86d7496b6aed0459f1c7ddcff93ed4ab54d2fb577eea08c310cf98fcb4e336040516116c291906144e2565b60405180910390a1565b6116d7848484610ec2565b6116e384848484611e22565b6116ec57600080fd5b50505050565b60606116fd82611ab0565b61170657600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117ad5780601f10611782576101008083540402835291602001916117ad565b820191906000526020600020905b81548152906001019060200180831161179057829003601f168201915b50505050509050919050565b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611871576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611868906145e6565b60405180910390fd5b61187b8484611f71565b6118ce6001601760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9490919063ffffffff16565b601760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550601760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509392505050565b61196261133b565b6119a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199890614686565b60405180910390fd5b565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611a6561133b565b611aa4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9b90614686565b60405180910390fd5b611aad81611f92565b50565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6060611b3683611b318461200f565b61215b565b905092915050565b600082821115611b83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7a90614626565b60405180910390fd5b600082840390508091505092915050565b600080828401905083811015611bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bd6906145a6565b60405180910390fd5b8091505092915050565b600080611bf583611145565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611c6457508373ffffffffffffffffffffffffffffffffffffffff16611c4c84610804565b73ffffffffffffffffffffffffffffffffffffffff16145b80611c755750611c7481856119a3565b5b91505092915050565b611c8983838361219f565b611c9383826123ce565b611c9d828261256c565b505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050611cd06136a8565b611cd8612633565b9050806080015151600186510114611cef57600080fd5b611cf76136f0565b6040518060400160405280600081526020016000815250905060008090505b8651811015611d8d5783878281518110611d2c57fe5b602002602001015110611d3e57600080fd5b611d7e82611d7985608001516001850181518110611d5857fe5b60200260200101518a8581518110611d6c57fe5b6020026020010151612a80565b612b12565b91508080600101915050611d16565b50611db0818360800151600081518110611da357fe5b6020026020010151612b12565b9050611df685600001518660200151611dc884612bc3565b8560400151611dda8a60400151612bc3565b8760600151611dec8960000151612bc3565b8960200151612c5d565b611e065760019350505050611e0e565b600093505050505b92915050565b600081600001549050919050565b6000611e438473ffffffffffffffffffffffffffffffffffffffff16612dc1565b611e505760019050611f69565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ead94939291906144fd565b602060405180830381600087803b158015611ec757600080fd5b505af1158015611edb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611eff9190810190613e2e565b905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b611f7b8282612dd4565b611f85828261256c565b611f8e81612f15565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611fcc57600080fd5b60003390507fcfaaa26691e16e66e73290fc725eee1a6b4e0e693a1640484937aac25ffb55a48260405161200091906144c7565b60405180910390a18190505050565b60606000821415612057576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612156565b600082905060005b60008214612081578080600101915050600a828161207957fe5b04915061205f565b6060816040519080825280601f01601f1916602001820160405280156120b65781602001600182028038833980820191505090505b50905060006001830390505b6000861461214e57600a86816120d457fe5b066030017f0100000000000000000000000000000000000000000000000000000000000000028282806001900393508151811061210d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161214657fe5b0495506120c2565b819450505050505b919050565b60606121978383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612f61565b905092915050565b6121a881611145565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612215576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161220c90614666565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161227c90614706565b60405180910390fd5b61228e8161335e565b6122d5600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061341c565b61231c600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613432565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006124266001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611b3e90919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114612513576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061249357fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106124eb57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612565919061370a565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b61263b6136a8565b60405180604001604052807f271c928248d1ec0ff348e2752c032c5176b62ef6db007d0ccdf520d44229c3f781526020017f25d8195a072a5b231e1d4869d6e7afe9d256f49520af3f6871197b09535aca9d8152508160000181905250604051806040016040528060405180604001604052807f03c7b6d535133ca54705f2d8a3f1425a3da501ace186ebf670d86589bf49687381526020017f0d6a71611c3595c1f50a26329ac9be4e8469e974c2b77c8aa6a28d91e141d3b8815250815260200160405180604001604052807f09512728ff620013af00bbdc7ad0246bfca1df380fe12a6eab94a6f46c2cd79281526020017f1e483165b626c034c230ae4c9380f5a3cadab75353a6602b69e4ddb26c78bdf98152508152508160200181905250604051806040016040528060405180604001604052807f15b880a921c168d31ff139b21f620b85fa4cbf1e36e5f4cb94c0760ddd463d2081526020017f261069e4070a0fe0a2c83ef769508d4fae6783f85ea463984a55fe70e8513a64815250815260200160405180604001604052807f12bc21a668f9b86a7aeea2995271a1d267c95543ec40f64739eddec787de0f9781526020017f11dabd2418ec87c5da382d891ea400c9ceaaa685553ae593f1e051cde9b02f6e8152508152508160400181905250604051806040016040528060405180604001604052807f0ccee4813d8b252d3bf44b7dc397ed78e594cd5e0080ffda0bdb0498c0140ee681526020017f114533ae59379e267ade8b6c51ea4f9eceefbf86d046256173697c495a2ff466815250815260200160405180604001604052807f106f487c464ba37107eeecdcf813a29b7cab16abf3b92cbf835b2300b56151d481526020017e54d7e4bfb2691e87b5228440e4992b8fb9e6bae92c757c76e08987c570aea58152508152508160600181905250600360405190808252806020026020018201604052801561292157816020015b61290e613736565b8152602001906001900390816129065790505b50816080018190525060405180604001604052807f07046e5847d1dd83b0819c464fa1ad87d5492ddc187f18f41afdb6068e9f16ca81526020017f2855afec9d064fffe6bf11796049b3febb5e43eb61975fdb7605e0cca4efeecf815250816080015160008151811061299057fe5b602002602001018190525060405180604001604052807f1085bc5c8e1d27a4bc37684826db69ab2f88c449fca226fba883052fe37e776981526020017f2ee6fb4257c398efdf53c13795c90181e27644d0fba0c0155b0ac635677ea9f98152508160800151600181518110612a0157fe5b602002602001018190525060405180604001604052807f062f3b39c87d0f3a5ea645a735572b2208613dfab266a36d971d55a9bc8959a581526020017f2cd50c07d740c0be5428c1b3fd3c86602afd841ba69584dfc9db96e7e6d60b908152508160800151600281518110612a7257fe5b602002602001018190525090565b612a886136f0565b612a90613750565b836000015181600060038110612aa257fe5b602002018181525050836020015181600160038110612abd57fe5b6020020181815250508281600260038110612ad457fe5b602002018181525050600060608360808460076107d05a03fa90508060008114612afd57612aff565bfe5b5080612b0a57600080fd5b505092915050565b612b1a6136f0565b612b22613772565b836000015181600060048110612b3457fe5b602002018181525050836020015181600160048110612b4f57fe5b602002018181525050826000015181600260048110612b6a57fe5b602002018181525050826020015181600360048110612b8557fe5b602002018181525050600060608360c08460066107d05a03fa90508060008114612bae57612bb0565bfe5b5080612bbb57600080fd5b505092915050565b612bcb6136f0565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015612c08575060008360200151145b15612c2c576040518060400160405280600081526020016000815250915050612c58565b60405180604001604052808460000151815260200182856020015181612c4e57fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015612c9c57816020015b612c89613736565b815260200190600190039081612c815790505b50905060606004604051908082528060200260200182016040528015612cdc57816020015b612cc9613794565b815260200190600190039081612cc15790505b5090508a82600081518110612ced57fe5b60200260200101819052508882600181518110612d0657fe5b60200260200101819052508682600281518110612d1f57fe5b60200260200101819052508482600381518110612d3857fe5b60200260200101819052508981600081518110612d5157fe5b60200260200101819052508781600181518110612d6a57fe5b60200260200101819052508581600281518110612d8357fe5b60200260200101819052508381600381518110612d9c57fe5b6020026020010181905250612db18282613455565b9250505098975050505050505050565b600080823b905060008111915050919050565b612ddd81611ab0565b15612e1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e1490614606565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612eb6600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061341c565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612fbd5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b885181101561308157888181518110612fe957fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811061304557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612fd4565b600090505b87518110156131335787818151811061309b57fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181106130f757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613086565b600090505b86518110156131e55786818151811061314d57fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181106131a957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613138565b600090505b8551811015613297578581815181106131ff57fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811061325b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506131ea565b600090505b8451811015613349578481815181106132b157fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811061330d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061329c565b82995050505050505050505095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146134195760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6001816000016000828254019250508190555050565b61344a60018260000154611b3e90919063ffffffff16565b816000018190555050565b6000815183511461346557600080fd5b60008351905060006006820290506060816040519080825280602002602001820160405280156134a45781602001602082028038833980820191505090505b50905060008090505b8381101561364a578681815181106134c157fe5b6020026020010151600001518260006006840201815181106134df57fe5b6020026020010181815250508681815181106134f757fe5b60200260200101516020015182600160068402018151811061351557fe5b60200260200101818152505085818151811061352d57fe5b60200260200101516000015160016002811061354557fe5b602002015182600260068402018151811061355c57fe5b60200260200101818152505085818151811061357457fe5b60200260200101516000015160006002811061358c57fe5b60200201518260036006840201815181106135a357fe5b6020026020010181815250508581815181106135bb57fe5b6020026020010151602001516001600281106135d357fe5b60200201518260046006840201815181106135ea57fe5b60200260200101818152505085818151811061360257fe5b60200260200101516020015160006002811061361a57fe5b602002015182600560068402018151811061363157fe5b60200260200101818152505080806001019150506134ad565b506136536137ba565b6000602082602086026020860160086107d05a03fa905080600081146136785761367a565bfe5b508061368557600080fd5b60008260006001811061369457fe5b602002015114159550505050505092915050565b604051806101e001604052806136bc613736565b81526020016136c9613794565b81526020016136d6613794565b81526020016136e3613794565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156137315781836000526020600020918201910161373091906137dc565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180608001604052806137a7613801565b81526020016137b4613801565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b6137fe91905b808211156137fa5760008160009055506001016137e2565b5090565b90565b6040518060400160405280600290602082028038833980820191505090505090565b600061382f82356148aa565b905092915050565b600082601f83011261384857600080fd5b600261385b6138568261478e565b614761565b9150818385602084028201111561387157600080fd5b60005b838110156138a157816138878882613b10565b845260208401935060208301925050600181019050613874565b5050505092915050565b600082601f8301126138bc57600080fd5b60026138cf6138ca826147b0565b614761565b915081838560208402820111156138e557600080fd5b60005b8381101561391557816138fb8882613b10565b8452602084019350602083019250506001810190506138e8565b5050505092915050565b600061392b82356148bc565b905092915050565b600061393f82356148c8565b905092915050565b600061395382356148d2565b905092915050565b600061396782516148d2565b905092915050565b600082601f83011261398057600080fd5b813561399361398e826147d2565b614761565b915080825260208301602083018583830111156139af57600080fd5b6139ba83828461495e565b50505092915050565b600082601f8301126139d457600080fd5b81356139e76139e2826147fe565b614761565b91508082526020830160208301858383011115613a0357600080fd5b613a0e83828461495e565b50505092915050565b600060408284031215613a2957600080fd5b613a336040614761565b90506000613a4384828501613b10565b6000830152506020613a5784828501613b10565b60208301525092915050565b600060808284031215613a7557600080fd5b613a7f6040614761565b90506000613a8f84828501613837565b6000830152506040613aa384828501613837565b60208301525092915050565b60006101008284031215613ac257600080fd5b613acc6060614761565b90506000613adc84828501613a17565b6000830152506040613af084828501613a63565b60208301525060c0613b0484828501613a17565b60408301525092915050565b6000613b1c823561491e565b905092915050565b600060208284031215613b3657600080fd5b6000613b4484828501613823565b91505092915050565b60008060408385031215613b6057600080fd5b6000613b6e85828601613823565b9250506020613b7f85828601613823565b9150509250929050565b600080600060608486031215613b9e57600080fd5b6000613bac86828701613823565b9350506020613bbd86828701613823565b9250506040613bce86828701613b10565b9150509250925092565b60008060008060808587031215613bee57600080fd5b6000613bfc87828801613823565b9450506020613c0d87828801613823565b9350506040613c1e87828801613b10565b925050606085013567ffffffffffffffff811115613c3b57600080fd5b613c478782880161396f565b91505092959194509250565b60008060408385031215613c6657600080fd5b6000613c7485828601613823565b9250506020613c858582860161391f565b9150509250929050565b60008060408385031215613ca257600080fd5b6000613cb085828601613823565b9250506020613cc185828601613b10565b9150509250929050565b600080600060608486031215613ce057600080fd5b6000613cee86828701613823565b9350506020613cff86828701613b10565b925050604084013567ffffffffffffffff811115613d1c57600080fd5b613d28868287016139c3565b9150509250925092565b60008060408385031215613d4557600080fd5b6000613d5385828601613933565b925050602083013567ffffffffffffffff811115613d7057600080fd5b613d7c858286016139c3565b9150509250929050565b600080600060608486031215613d9b57600080fd5b6000613da986828701613933565b935050602084013567ffffffffffffffff811115613dc657600080fd5b613dd2868287016139c3565b925050604084013567ffffffffffffffff811115613def57600080fd5b613dfb8682870161396f565b9150509250925092565b600060208284031215613e1757600080fd5b6000613e2584828501613947565b91505092915050565b600060208284031215613e4057600080fd5b6000613e4e8482850161395b565b91505092915050565b60008060408385031215613e6a57600080fd5b600083013567ffffffffffffffff811115613e8457600080fd5b613e90858286016139c3565b9250506020613ea185828601613b10565b9150509250929050565b6000806101408385031215613ebf57600080fd5b6000613ecd85828601613aaf565b925050610100613edf858286016138ab565b9150509250929050565b600060208284031215613efb57600080fd5b6000613f0984828501613b10565b91505092915050565b6000806000806000806101c08789031215613f2c57600080fd5b6000613f3a89828a01613b10565b9650506020613f4b89828a01613823565b9550506040613f5c89828a01613b10565b945050606087013567ffffffffffffffff811115613f7957600080fd5b613f8589828a016139c3565b9350506080613f9689828a01613aaf565b925050610180613fa889828a016138ab565b9150509295509295509295565b613fbe81614928565b82525050565b613fcd81614862565b82525050565b613fdc81614874565b82525050565b6000613fed8261482a565b613ff78185614840565b935061400781856020860161496d565b614010816149a0565b840191505092915050565b600061402682614835565b6140308185614851565b935061404081856020860161496d565b614049816149a0565b840191505092915050565b6000614061602083614851565b91507f45523732313a20617070726f76616c20746f2063757272656e74206f776e65726000830152602082019050919050565b60006140a1601b83614851565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b60006140e1602083614851565b91507f54686520736f6c7574696f6e206861736e74206265656e2076657269666965646000830152602082019050919050565b6000614121603083614851565b91507f2053656e6465722061646472657373206973206e6f742073616d65206173207460008301527f686174206f6620746865206f776e6572000000000000000000000000000000006020830152604082019050919050565b6000614187601683614851565b91507f546f6b656e496420616c726561647920657869737473000000000000000000006000830152602082019050919050565b60006141c7601e83614851565b91507f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006000830152602082019050919050565b6000614207601c83614851565b91507f546f74616c20746f6b656e20537570706c792068617320656e646564000000006000830152602082019050919050565b6000614247603083614851565b91507f4552433237313a5472616e736665727265642066726f6d20616464726573732060008301527f6973206e6f7420746865206f776e6572000000000000000000000000000000006020830152604082019050919050565b60006142ad601b83614851565b91507f4552433732313a204f6e6c79206f776e65722063616e206d696e7400000000006000830152602082019050919050565b60006142ed603f83614851565b91507f4552433732313a20617070726f76652063616c6c6572206973206e656974686560008301527f7220616e206f776e6572206e6f7220617070726f76656420666f7220616c6c006020830152604082019050919050565b6000614353602983614851565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006143b9602d83614851565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e206560008301527f78697374656e7420746f6b656e000000000000000000000000000000000000006020830152604082019050919050565b600061441f603183614851565b91507f4552433732313a526563697069656e742061646472657373206973206e6f742060008301527f74686520726967687420616464726573730000000000000000000000000000006020830152604082019050919050565b6000614485601b83614851565b91507f546865726520617265206e6f7420656e6f75676820746f6b656e7300000000006000830152602082019050919050565b6144c1816148a0565b82525050565b60006020820190506144dc6000830184613fc4565b92915050565b60006020820190506144f76000830184613fb5565b92915050565b60006080820190506145126000830187613fb5565b61451f6020830186613fc4565b61452c60408301856144b8565b818103606083015261453e8184613fe2565b905095945050505050565b600060208201905061455e6000830184613fd3565b92915050565b6000602082019050818103600083015261457e818461401b565b905092915050565b6000602082019050818103600083015261459f81614054565b9050919050565b600060208201905081810360008301526145bf81614094565b9050919050565b600060208201905081810360008301526145df816140d4565b9050919050565b600060208201905081810360008301526145ff81614114565b9050919050565b6000602082019050818103600083015261461f8161417a565b9050919050565b6000602082019050818103600083015261463f816141ba565b9050919050565b6000602082019050818103600083015261465f816141fa565b9050919050565b6000602082019050818103600083015261467f8161423a565b9050919050565b6000602082019050818103600083015261469f816142a0565b9050919050565b600060208201905081810360008301526146bf816142e0565b9050919050565b600060208201905081810360008301526146df81614346565b9050919050565b600060208201905081810360008301526146ff816143ac565b9050919050565b6000602082019050818103600083015261471f81614412565b9050919050565b6000602082019050818103600083015261473f81614478565b9050919050565b600060208201905061475b60008301846144b8565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561478457600080fd5b8060405250919050565b600067ffffffffffffffff8211156147a557600080fd5b602082029050919050565b600067ffffffffffffffff8211156147c757600080fd5b602082029050919050565b600067ffffffffffffffff8211156147e957600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561481557600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061486d82614880565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006148b5826148fe565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006149338261493a565b9050919050565b60006149458261494c565b9050919050565b600061495782614880565b9050919050565b82818337600083830152505050565b60005b8381101561498b578082015181840152602081019050614970565b8381111561499a576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a723058206241bcbfec9c0e7301dc2c79eac28839ecd58233daf814df046d09f88d97b9106c6578706572696d656e74616cf50037",
  "sourceMap": "536:2307:9:-;;;495:42:4;464:73;;;;;;;;;;;;;;;;;;;;588:4;544:49;;;;;;;;;;;;;;;;;;;;149:5:10;127:27;;;;;;;;;;;;;;;;;;;;691:42:9;667:66;;;;;;;;;;;;;;;;;;;;751:1;735:17;;850:10:7;841:6;;:19;;;;;;;;;;;;;;;;;;720:5:8;710:7;;:15;;;;;;;;;;;;;;;;;;807:40:0;388:10;826:20;;807:18;;;:40;;;:::i;:::-;2035::1;1905:10;2054:20;;2035:18;;;:40;;;:::i;:::-;1338:51:2;931:10;1357:31;;1338:18;;;:51;;;:::i;:::-;1408:27:3;;;;;;;;;;;;;;;;;:5;:27;;;;;;;;;;;;:::i;:::-;;1446:15;;;;;;;;;;;;;;;;;:7;:15;;;;;;;;;;;;:::i;:::-;;1569:49;818:10;1588:29;;1569:18;;;:49;;;:::i;:::-;1162:2:4;1143:16;:21;;;;1210:16;;1175:20;:32;1196:10;1175:32;;;;;;;;;;;;;;;:51;;;;536:2307:9;;1170:161:0;1261:10;1246:25;;:11;:25;;;;;1238:34;;;;;;1319:4;1283:20;:33;1304:11;1283:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1170:161;:::o;536:2307:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "536:2307:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;536:2307:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;951:135:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3560:255:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2863:689;;;;;;;;;;;;;;;;:::i;:::-;;1916:193:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;127:27:10;;;:::i;:::-;;;;;;;;;;;;;;;;2066:773:9;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1814:90:3;;;:::i;:::-;;;;;;;;;;;;;;;;1722:86;;;:::i;:::-;;;;;;;;;;;;;;;;2121:96:2;;;:::i;:::-;;;;;;;;;;;;;;;;2117:319:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;426:31;;;:::i;:::-;;;;;;;;;;;;;;;;4816:184:1;;;;;;;;;;;;;;;;:::i;:::-;;1809:99:4;;;:::i;:::-;;;;;;;;;;;;;;;;14804:122:6;;;;;;;;;;;;;;;;:::i;:::-;;1778:185:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14932:166:6;;;;;;;;;;;;;;;;:::i;:::-;;5008:134:1;;;;;;;;;;;;;;;;:::i;:::-;;9524:400:11;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1910:102:3;;;:::i;:::-;;;;;;;;;;;;;;;;2562:151:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2529:258:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2091:430;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;161:295:10;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1176:129:8;;;:::i;:::-;;1687:114:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;579:80:7;;;:::i;:::-;;;;;;;;;;;;;;;;1122:91;;;:::i;:::-;;;;;;;;;;;;;;;;1342:510:9;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4115:217:1;;;;;;;;;;;;;;;;:::i;:::-;;1311:113:8;;;:::i;:::-;;5150:214:1;;;;;;;;;;;;;;;;:::i;:::-;;2018:157:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;464:73:4;;;:::i;:::-;;;;;;;;;;;;;;;;1310:369;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;539:44:8;;;:::i;:::-;;4661:147:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;544:49:4;;;:::i;:::-;;;;;;;;;;;;;;;;1381:249:7;;;;;;;;;;;;;;;;:::i;:::-;;951:135:0;1021:4;1045:20;:33;1066:11;1045:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1038:40;;951:135;;;:::o;3560:255:1:-;3619:7;3699:16;3707:7;3699;:16::i;:::-;3691:74;;;;;;;;;;;;;;;;;;;;;;3783:15;:24;3799:7;3783:24;;;;;;;;;;;;;;;;;;;;;3776:31;;3560:255;;;:::o;2863:689::-;3015:13;3031:16;3039:7;3031;:16::i;:::-;3015:32;;3072:5;3066:11;;:2;:11;;;;3058:56;;;;;;;;;;;;;;;;;;;;;;3254:5;3240:19;;:10;:19;;;:58;;;;3263:35;3280:5;3287:10;3263:16;:35::i;:::-;3240:58;3232:134;;;;;;;;;;;;;;;;;;;;;;3457:2;3430:15;:24;3446:7;3430:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3534:7;3530:2;3514:28;;3523:5;3514:28;;;;;;;;;;;;2863:689;;;:::o;1916:193:4:-;1993:13;2054:45;2081:8;2091:7;2054:26;:45::i;:::-;2047:52;;1916:193;;;;:::o;127:27:10:-;;;;;;;;;;;;;:::o;2066:773:9:-;2229:4;2286;2248:42;;:34;2269:5;2276;2248:20;:34::i;:::-;:42;;;2240:87;;;;;;;;;;;;;;;;;;;;;;2467:2;2448:16;:21;2440:62;;;;;;;;;;;;;;;;;;;;;;2513:8;2524:1;2513:12;;2509:302;2531:12;:19;;;;2527:1;:23;;;2509:302;;2596:5;2570:31;;:12;2583:1;2570:15;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:31;;;2567:232;;;2617:45;2637:5;2644:7;2653:8;2617:19;:45::i;:::-;;2676;2703:8;2713:7;2676:26;:45::i;:::-;;2740:18;2750:7;2740:18;;;;;;;;;;;;;;;2779:4;2772:11;;;;;2567:232;2552:3;;;;;;;2509:302;;;;2066:773;;;;;;;;;:::o;1814:90:3:-;1853:13;1889:7;1882:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:90;:::o;1722:86::-;1759:13;1795:5;1788:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1722:86;:::o;2121:96:2:-;2165:7;2192:10;:17;;;;2185:24;;2121:96;:::o;2117:319:4:-;2190:4;2236:8;:20;2245:10;2236:20;;;;;;;;;;;;;;;;2222:10;:34;;2214:74;;;;;;;;;;;;;;;;;;;;;;2322:36;2347:10;2322:8;:20;2331:10;2322:20;;;;;;;;;;;;;;;;:24;;:36;;;;:::i;:::-;2299:8;:20;2308:10;2299:20;;;;;;;;;;;;;;;:59;;;;2384:28;2401:10;2384:8;:12;2393:2;2384:12;;;;;;;;;;;;;;;;:16;;:28;;;;:::i;:::-;2369:8;:12;2378:2;2369:12;;;;;;;;;;;;;;;:43;;;;2430:4;2423:11;;2117:319;;;;:::o;426:31::-;;;;:::o;4816:184:1:-;4907:39;4926:10;4938:7;4907:18;:39::i;:::-;4899:48;;;;;;4960:32;4974:4;4980:2;4984:7;4960:13;:32::i;:::-;4816:184;;;:::o;1809:99:4:-;1857:7;1884:16;;1877:23;;1809:99;:::o;14804:122:6:-;14879:40;14890:5;14897:7;14916:1;14906:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14906:12:6;;;;14879:10;:40::i;:::-;14804:122;;:::o;1778:185:2:-;1858:7;1894:16;1904:5;1894:9;:16::i;:::-;1886:5;:24;1878:33;;;;;;1929:12;:19;1942:5;1929:19;;;;;;;;;;;;;;;1949:5;1929:26;;;;;;;;;;;;;;;;1922:33;;1778:185;;;;:::o;14932:166:6:-;;;;:::o;5008:134:1:-;5095:39;5112:4;5118:2;5122:7;5095:39;;;;;;;;;;;;:16;:39::i;:::-;5008:134;;;:::o;9524:400:11:-;9627:6;9645:25;9684:1;9673:13;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;9673:13:11;;;;9645:41;;9709:6;9718:1;9709:10;;9705:88;9725:12;9721:1;:16;9705:88;;;9774:5;9780:1;9774:8;;;;;;;;;;;9757:11;9769:1;9757:14;;;;;;;;;;;;;:25;;;;;9739:3;;;;;;;9705:88;;;;9836:1;9806:26;9813:11;9826:5;9806:6;:26::i;:::-;:31;9802:116;;;9860:4;9853:11;;;;;9802:116;9902:5;9895:12;;;9524:400;;;;;:::o;1910:102:3:-;1954:13;1991;1984:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:102;:::o;2562:151:2:-;2620:7;2656:13;:11;:13::i;:::-;2648:5;:21;2640:30;;;;;;2688:10;2699:5;2688:17;;;;;;;;;;;;;;;;2681:24;;2562:151;;;:::o;2529:258:1:-;2584:7;2659:13;2675:11;:20;2687:7;2675:20;;;;;;;;;;;;;;;;;;;;;2659:36;;2731:1;2714:19;;:5;:19;;;;2706:73;;;;;;;;;;;;;;;;;;;;;;2529:258;;;;:::o;2091:430::-;2146:7;2479:34;:17;:24;2497:5;2479:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2472:41;;2091:430;;;:::o;161:295:10:-;266:4;297:22;306:5;313;297:8;:22::i;:::-;287:7;;:32;;;;;;;;;;;;;;;;;;338:7;;;;;;;;;;;334:111;;;373:4;366:11;;;;334:111;424:5;417:12;;161:295;;;;;:::o;1176:129:8:-;883:7;;;;;;;;;;;882:8;874:17;;;;;;1243:4;1233:7;;:14;;;;;;;;;;;;;;;;;;1271:18;1278:10;1271:18;;;;;;;;;;;;;;;1176:129::o;1687:114:4:-;1744:7;1770:23;1787:5;1770:16;:23::i;:::-;1763:30;;1687:114;;;:::o;579:80:7:-;619:7;645:6;;;;;;;;;;;638:13;;579:80;:::o;1122:91::-;1161:4;1199:6;;;;;;;;;;;1185:20;;:10;:20;;;1178:27;;1122:91;:::o;1342:510:9:-;1394:7;1430:258;;;;;;;;1489:5;;1430:258;;;;1545:4;1430:258;;;;;;1599:5;1430:258;;;;;1408:12;:19;1421:5;;1408:19;;;;;;;;;;;:280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1694:12;1712;:19;1725:5;;1712:19;;;;;;;;;;;1694:38;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1694:38:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1786:12;:19;;;;1779:26;;1342:510;;;:::o;4115:217:1:-;4201:10;4195:16;;:2;:16;;;;4187:25;;;;;;4260:8;4223:18;:30;4242:10;4223:30;;;;;;;;;;;;;;;:34;4254:2;4223:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4311:2;4284:40;;4299:10;4284:40;;;4315:8;4284:40;;;;;;;;;;;;;;;4115:217;;:::o;1311:113:8:-;1367:5;1357:7;;:15;;;;;;;;;;;;;;;;;;1396:20;1405:10;1396:20;;;;;;;;;;;;;;;1311:113::o;5150:214:1:-;5257:31;5270:4;5276:2;5280:7;5257:12;:31::i;:::-;5307:48;5330:4;5336:2;5340:7;5349:5;5307:22;:48::i;:::-;5299:57;;;;;;5150:214;;;;:::o;2018:157:3:-;2071:13;2109:16;2117:7;2109;:16::i;:::-;2101:25;;;;;;2148:10;:19;2159:7;2148:19;;;;;;;;;;;2141:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2018:157;;;:::o;464:73:4:-;;;;;;;;;;;;;:::o;1310:369::-;1392:7;1437:13;;;;;;;;;;;1423:27;;:10;:27;;;1415:88;;;;;;;;;;;;;;;;;;;;;;1518:24;1530:2;1534:7;1518:11;:24::i;:::-;1618:19;1635:1;1618:8;:12;1627:2;1618:12;;;;;;;;;;;;;;;;:16;;:19;;;;:::i;:::-;1603:8;:12;1612:2;1603:12;;;;;;;;;;;;;;;:34;;;;1659:8;:12;1668:2;1659:12;;;;;;;;;;;;;;;;1652:19;;1310:369;;;;;:::o;539:44:8:-;1051:9:7;:7;:9::i;:::-;1043:49;;;;;;;;;;;;;;;;;;;;;;539:44:8:o;4661:147:1:-;4741:4;4765:18;:25;4784:5;4765:25;;;;;;;;;;;;;;;:35;4791:8;4765:35;;;;;;;;;;;;;;;;;;;;;;;;;4758:42;;4661:147;;;;:::o;544:49:4:-;;;;;;;;;;;;;:::o;1381:249:7:-;1051:9;:7;:9::i;:::-;1043:49;;;;;;;;;;;;;;;;;;;;;;1594:28;1613:8;1594:18;:28::i;:::-;1381:249;:::o;5565:155:1:-;5622:4;5639:13;5655:11;:20;5667:7;5655:20;;;;;;;;;;;;;;;;;;;;;5639:36;;5710:1;5693:19;;:5;:19;;;;5686:26;;;5565:155;;;:::o;2661:413:3:-;2747:13;2901:163;2949:16;3004:17;3013:7;3004:8;:17::i;:::-;2901:9;:163::i;:::-;2894:170;;2661:413;;;;:::o;1274:179:13:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;6089:249:1:-;6174:4;6191:13;6207:16;6215:7;6207;:16::i;:::-;6191:32;;6253:5;6242:16;;:7;:16;;;:51;;;;6286:7;6262:31;;:20;6274:7;6262:11;:20::i;:::-;:31;;;6242:51;:87;;;;6297:32;6314:5;6321:7;6297:16;:32::i;:::-;6242:87;6234:96;;;6089:249;;;;:::o;3097:245:2:-;3183:38;3203:4;3209:2;3213:7;3183:19;:38::i;:::-;3234:47;3267:4;3273:7;3234:32;:47::i;:::-;3294:40;3322:2;3326:7;3294:27;:40::i;:::-;3097:245;;;:::o;8598:921:11:-;8678:4;8694:26;8723:77;8694:106;;8810:22;;:::i;:::-;8835:14;:12;:14::i;:::-;8810:39;;8887:2;:12;;;:19;8882:1;8867:5;:12;:16;:39;8859:48;;;;;;8964:27;;:::i;:::-;8994:21;;;;;;;;9010:1;8994:21;;;;9013:1;8994:21;;;8964:51;;9030:6;9039:1;9030:10;;9025:197;9046:5;:12;9042:1;:16;9025:197;;;9098:18;9087:5;9093:1;9087:8;;;;;;;;;;;;;;:29;9079:38;;;;;;9138:73;9155:4;9161:49;9180:2;:12;;;9197:1;9193;:5;9180:19;;;;;;;;;;;;;;9201:5;9207:1;9201:8;;;;;;;;;;;;;;9161:18;:49::i;:::-;9138:16;:73::i;:::-;9131:80;;9060:3;;;;;;;9025:197;;;;9238:39;9255:4;9261:2;:12;;;9274:1;9261:15;;;;;;;;;;;;;;9238:16;:39::i;:::-;9231:46;;9291:193;9326:5;:7;;;9335:5;:7;;;9357:20;9372:4;9357:14;:20::i;:::-;9379:2;:8;;;9402:23;9417:5;:7;;;9402:14;:23::i;:::-;9427:2;:8;;;9450:24;9465:2;:8;;;9450:14;:24::i;:::-;9476:2;:7;;;9291:20;:193::i;:::-;9287:207;;9493:1;9486:8;;;;;;;9287:207;9511:1;9504:8;;;;;8598:921;;;;;:::o;1063:112:12:-;1128:7;1154;:14;;;1147:21;;1063:112;;;:::o;8478:356:1:-;8600:4;8627:15;:2;:13;;;:15::i;:::-;8622:60;;8666:4;8659:11;;;;8622:60;8694:13;8726:2;8710:36;;;8747:10;8759:4;8765:7;8774:5;8710:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8710:70:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8710:70:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8710:70:1;;;;;;;;;8694:86;;1021:10;8809:16;;8799:26;;;:6;:26;;;;8791:35;;;8478:356;;;;;;;:::o;3605:202:2:-;3669:24;3681:2;3685:7;3669:11;:24::i;:::-;3706:40;3734:2;3738:7;3706:27;:40::i;:::-;3759;3791:7;3759:31;:40::i;:::-;3605:202;;:::o;1636:221:7:-;1731:1;1711:22;;:8;:22;;;;1702:32;;;;;;1745:17;1765:10;1745:30;;1791:27;1809:8;1791:27;;;;;;;;;;;;;;;1841:8;1829:20;;1636:221;;:::o;43274:465:6:-;43324:27;43373:1;43367:2;:7;43363:48;;;43390:10;;;;;;;;;;;;;;;;;;;;;43363:48;43420:6;43429:2;43420:11;;43441:8;43459:66;43471:1;43466;:6;43459:66;;43488:5;;;;;;;43512:2;43507:7;;;;;;;;;43459:66;;;43534:17;43564:3;43554:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43554:14:6;;;;43534:34;;43578:6;43593:1;43587:3;:7;43578:16;;43604:100;43617:1;43611:2;:7;43604:100;;43667:2;43662;:7;;;;;;43657:2;:12;43646:25;;43634:4;43639:3;;;;;;;43634:9;;;;;;;;;;;:37;;;;;;;;;;;43691:2;43685:8;;;;;;;;;43604:100;;;43727:4;43713:19;;;;;;43274:465;;;;:::o;39715:166::-;39793:33;39845:29;39855:2;39859;39845:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39838:36;;39715:166;;;;:::o;7180:759:1:-;7355:16;7363:7;7355;:16::i;:::-;7347:24;;:4;:24;;;7339:85;;;;;;;;;;;;;;;;;;;;;;7526:1;7512:16;;:2;:16;;;;7504:78;;;;;;;;;;;;;;;;;;;;;;7626:23;7641:7;7626:14;:23::i;:::-;7736:33;:17;:21;7754:2;7736:21;;;;;;;;;;;;;;;:31;:33::i;:::-;7780:35;:17;:23;7798:4;7780:23;;;;;;;;;;;;;;;:33;:35::i;:::-;7849:2;7826:11;:20;7838:7;7826:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;7923:7;7919:2;7904:27;;7913:4;7904:27;;;;;;;;;;;;7180:759;;;:::o;5621:1148:2:-;5887:22;5912:32;5942:1;5912:12;:18;5925:4;5912:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;5887:57;;5955:18;5976:17;:26;5994:7;5976:26;;;;;;;;;;;;5955:47;;6123:14;6109:10;:28;6105:328;;6154:19;6176:12;:18;6189:4;6176:18;;;;;;;;;;;;;;;6195:14;6176:34;;;;;;;;;;;;;;;;6154:56;;6260:11;6227:12;:18;6240:4;6227:18;;;;;;;;;;;;;;;6246:10;6227:30;;;;;;;;;;;;;;;:44;;;;6377:10;6344:17;:30;6362:11;6344:30;;;;;;;;;;;:43;;;;6105:328;;6522:12;:18;6535:4;6522:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5621:1148;;;;:::o;4445:186::-;4559:12;:16;4572:2;4559:16;;;;;;;;;;;;;;;:23;;;;4530:17;:26;4548:7;4530:26;;;;;;;;;;;:52;;;;4593:12;:16;4606:2;4593:16;;;;;;;;;;;;;;;4615:7;4593:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4593:30:2;;;;;;;;;;;;;;;;;;;;;;4445:186;;:::o;6642:1951:11:-;6689:22;;:::i;:::-;6734:169;;;;;;;;6758:66;6734:169;;;;6835:66;6734:169;;;6723:2;:8;;:180;;;;6923:327;;;;;;;;;;;;;;;;6948:66;6923:327;;;;7025:66;6923:327;;;;;;;;;;;;;;;7104:66;6923:327;;;;7181:66;6923:327;;;;;;6913:2;:7;;:337;;;;7271:327;;;;;;;;;;;;;;;;7296:66;7271:327;;;;7373:66;7271:327;;;;;;;;;;;;;;;7452:66;7271:327;;;;7529:66;7271:327;;;;;;7260:2;:8;;:338;;;;7619:327;;;;;;;;;;;;;;;;7644:66;7619:327;;;;7721:66;7619:327;;;;;;;;;;;;;;;7800:66;7619:327;;;;7877:66;7619:327;;;;;;7608:2;:8;;:338;;;;7993:1;7971:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7956:2;:12;;:39;;;;8023:169;;;;;;;;8047:66;8023:169;;;;8124:66;8023:169;;;8005:2;:12;;;8018:1;8005:15;;;;;;;;;;;;;:187;;;;8220:169;;;;;;;;8244:66;8220:169;;;;8321:66;8220:169;;;8202:2;:12;;;8215:1;8202:15;;;;;;;;;;;;;:187;;;;8417:169;;;;;;;;8441:66;8417:169;;;;8518:66;8417:169;;;8399:2;:12;;;8412:1;8399:15;;;;;;;;;;;;;:187;;;;6642:1951;:::o;3143:454::-;3212:16;;:::i;:::-;3240:20;;:::i;:::-;3281:1;:3;;;3270:5;3276:1;3270:8;;;;;;;;;;:14;;;;;3305:1;:3;;;3294:5;3300:1;3294:8;;;;;;;;;;:14;;;;;3329:1;3318:5;3324:1;3318:8;;;;;;;;;;:12;;;;;3340;3444:4;3441:1;3435:4;3428:5;3425:1;3418:4;3411:5;3407:16;3396:53;3385:64;;3526:7;3539:1;3534:20;;;;3519:35;;3534:20;3543:9;3519:35;;3582:7;3573:17;;;;;;3143:454;;;;;;:::o;2493:493::-;2572:16;;:::i;:::-;2600:20;;:::i;:::-;2641:2;:4;;;2630:5;2636:1;2630:8;;;;;;;;;;:15;;;;;2666:2;:4;;;2655:5;2661:1;2655:8;;;;;;;;;;:15;;;;;2691:2;:4;;;2680:5;2686:1;2680:8;;;;;;;;;;:15;;;;;2716:2;:4;;;2705:5;2711:1;2705:8;;;;;;;;;;:15;;;;;2730:12;2834:4;2831:1;2825:4;2818:5;2815:1;2808:4;2801:5;2797:16;2786:53;2775:64;;2916:7;2929:1;2924:20;;;;2909:35;;2924:20;2933:9;2909:35;;2971:7;2963:16;;;;;;2493:493;;;;;;:::o;2102:340::-;2159:14;;:::i;:::-;2237:6;2246:77;2237:86;;2344:1;2337;:3;;;:8;:20;;;;;2356:1;2349;:3;;;:8;2337:20;2333:58;;;2378:13;;;;;;;;2386:1;2378:13;;;;2389:1;2378:13;;;2371:20;;;;;2333:58;2408:27;;;;;;;;2416:1;:3;;;2408:27;;;;2432:1;2426;:3;;;:7;;;;;;2421:1;:13;2408:27;;;2401:34;;;2102:340;;;;:::o;5739:552::-;5990:4;6006:19;6042:1;6028:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6006:38;;6054:19;6090:1;6076:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6054:38;;6110:2;6102;6105:1;6102:5;;;;;;;;;;;;;:10;;;;6130:2;6122;6125:1;6122:5;;;;;;;;;;;;;:10;;;;6150:2;6142;6145:1;6142:5;;;;;;;;;;;;;:10;;;;6170:2;6162;6165:1;6162:5;;;;;;;;;;;;;:10;;;;6190:2;6182;6185:1;6182:5;;;;;;;;;;;;;:10;;;;6210:2;6202;6205:1;6202:5;;;;;;;;;;;;;:10;;;;6230:2;6222;6225:1;6222:5;;;;;;;;;;;;;:10;;;;6250:2;6242;6245:1;6242:5;;;;;;;;;;;;;:10;;;;6269:15;6277:2;6281;6269:7;:15::i;:::-;6262:22;;;;5739:552;;;;;;;;;;:::o;542:413:15:-;602:4;805:12;914:7;902:20;894:28;;947:1;940:4;:8;933:15;;;542:413;;;:::o;6499:471:1:-;6658:16;6666:7;6658;:16::i;:::-;6657:17;6649:52;;;;;;;;;;;;;;;;;;;;;;6818:2;6795:11;:20;6807:7;6795:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;6831:33;:17;:21;6849:2;6831:21;;;;;;;;;;;;;;;:31;:33::i;:::-;6954:7;6950:2;6929:33;;6938:10;6929:33;;;;;;;;;;;;6499:471;;:::o;4832:164:2:-;4936:10;:17;;;;4909:15;:24;4925:7;4909:24;;;;;;;;;;;:44;;;;4964:10;4980:7;4964:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4964:24:2;;;;;;;;;;;;;;;;;;;;;;4832:164;:::o;40285:1020:6:-;40417:33;40462:16;40487:2;40462:28;;40500:16;40525:2;40500:28;;40538:16;40563:2;40538:28;;40576:16;40601:2;40576:28;;40614:16;40639:2;40614:28;;40652:19;40737:3;:10;40724:3;:10;40711:3;:10;40698:3;:10;40685:3;:10;:23;:36;:49;:62;40674:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40674:74:6;;;;40652:96;;40758:19;40786:5;40758:34;;40802:6;40811:1;40802:10;;40822:6;40831:1;40822:10;;40851:1;40847:5;;40842:78;40858:3;:10;40854:1;:14;40842:78;;;40903:3;40907:1;40903:6;;;;;;;;;;;;;;;;;40889;40896:3;;;;;;40889:11;;;;;;;;;;;:20;;;;;;;;;;;40870:3;;;;;;;40842:78;;;40938:1;40934:5;;40929:78;40945:3;:10;40941:1;:14;40929:78;;;40990:3;40994:1;40990:6;;;;;;;;;;;;;;;;;40976;40983:3;;;;;;40976:11;;;;;;;;;;;:20;;;;;;;;;;;40957:3;;;;;;;40929:78;;;41025:1;41021:5;;41016:78;41032:3;:10;41028:1;:14;41016:78;;;41077:3;41081:1;41077:6;;;;;;;;;;;;;;;;;41063;41070:3;;;;;;41063:11;;;;;;;;;;;:20;;;;;;;;;;;41044:3;;;;;;;41016:78;;;41112:1;41108:5;;41103:78;41119:3;:10;41115:1;:14;41103:78;;;41164:3;41168:1;41164:6;;;;;;;;;;;;;;;;;41150;41157:3;;;;;;41150:11;;;;;;;;;;;:20;;;;;;;;;;;41131:3;;;;;;;41103:78;;;41199:1;41195:5;;41190:78;41206:3;:10;41202:1;:14;41190:78;;;41251:3;41255:1;41251:6;;;;;;;;;;;;;;;;;41237;41244:3;;;;;;41237:11;;;;;;;;;;;:20;;;;;;;;;;;41218:3;;;;;;;41190:78;;;41291:6;41277:21;;;;;;;;;;;40285:1020;;;;;;;:::o;8918:175:1:-;9018:1;8982:38;;:15;:24;8998:7;8982:24;;;;;;;;;;;;;;;;;;;;;:38;;;8978:108;;9072:1;9037:15;:24;9053:7;9037:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8978:108;8918:175;:::o;1181:89:12:-;1262:1;1244:7;:14;;;:19;;;;;;;;;;;1181:89;:::o;1276:108::-;1356:21;1375:1;1356:7;:14;;;:18;;:21;;;;:::i;:::-;1339:7;:14;;:38;;;;1276:108;:::o;3808:923:11:-;3890:4;3927:2;:9;3914:2;:9;:22;3906:31;;;;;;3947:13;3963:2;:9;3947:25;;3982:14;4010:1;3999:8;:12;3982:29;;4021:19;4054:9;4043:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;4043:21:11;;;;4021:43;;4079:6;4088:1;4079:10;;4074:307;4095:8;4091:1;:12;4074:307;;;4151:2;4154:1;4151:5;;;;;;;;;;;;;;:7;;;4132:5;4146:1;4142;4138;:5;:9;4132:16;;;;;;;;;;;;;:26;;;;;4191:2;4194:1;4191:5;;;;;;;;;;;;;;:7;;;4172:5;4186:1;4182;4178;:5;:9;4172:16;;;;;;;;;;;;;:26;;;;;4231:2;4234:1;4231:5;;;;;;;;;;;;;;:7;;;4239:1;4231:10;;;;;;;;;;;4212:5;4226:1;4222;4218;:5;:9;4212:16;;;;;;;;;;;;;:29;;;;;4274:2;4277:1;4274:5;;;;;;;;;;;;;;:7;;;4282:1;4274:10;;;;;;;;;;;4255:5;4269:1;4265;4261;:5;:9;4255:16;;;;;;;;;;;;;:29;;;;;4317:2;4320:1;4317:5;;;;;;;;;;;;;;:7;;;4325:1;4317:10;;;;;;;;;;;4298:5;4312:1;4308;4304;:5;:9;4298:16;;;;;;;;;;;;;:29;;;;;4360:2;4363:1;4360:5;;;;;;;;;;;;;;:7;;;4368:1;4360:10;;;;;;;;;;;4341:5;4355:1;4351;4347;:5;:9;4341:16;;;;;;;;;;;;;:29;;;;;4105:3;;;;;;;4074:307;;;;4390:18;;:::i;:::-;4418:12;4551:4;4546:3;4539:4;4528:9;4524:20;4517:4;4510:5;4506:16;4503:1;4496:4;4489:5;4485:16;4474:82;4463:93;;4633:7;4646:1;4641:20;;;;4626:35;;4641:20;4650:9;4626:35;;4688:7;4680:16;;;;;;4723:1;4713:3;4717:1;4713:6;;;;;;;;;;;:11;;4706:18;;;;;;;3808:923;;;;:::o;536:2307:9:-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;536:2307:9;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;536:2307:9;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;536:2307:9;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;536:2307:9;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;149:607;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;302:3;320:74;335:58;386:6;335:58;;;320:74;;;311:83;;411:5;470:6;517:3;509:4;501:6;497:17;492:3;488:27;485:36;482:2;;;534:1;531;524:12;482:2;559:1;544:206;569:6;566:1;563:13;544:206;;;627:3;649:37;682:3;670:10;649:37;;;644:3;637:50;710:4;705:3;701:14;694:21;;738:4;733:3;729:14;722:21;;601:149;591:1;588;584:9;579:14;;544:206;;;548:14;220:536;;;;;;;;783:615;;898:3;891:4;883:6;879:17;875:27;865:2;;916:1;913;906:12;865:2;940:3;958:78;973:62;1028:6;973:62;;;958:78;;;949:87;;1053:5;1112:6;1159:3;1151:4;1143:6;1139:17;1134:3;1130:27;1127:36;1124:2;;;1176:1;1173;1166:12;1124:2;1201:1;1186:206;1211:6;1208:1;1205:13;1186:206;;;1269:3;1291:37;1324:3;1312:10;1291:37;;;1286:3;1279:50;1352:4;1347:3;1343:14;1336:21;;1380:4;1375:3;1371:14;1364:21;;1243:149;1233:1;1230;1226:9;1221:14;;1186:206;;;1190:14;858:540;;;;;;;;1406:112;;1470:43;1505:6;1492:20;1470:43;;;1461:52;;1455:63;;;;;1525:118;;1592:46;1630:6;1617:20;1592:46;;;1583:55;;1577:66;;;;;1650:116;;1716:45;1753:6;1740:20;1716:45;;;1707:54;;1701:65;;;;;1773:120;;1850:38;1880:6;1874:13;1850:38;;;1841:47;;1835:58;;;;;1901:440;;2002:3;1995:4;1987:6;1983:17;1979:27;1969:2;;2020:1;2017;2010:12;1969:2;2057:6;2044:20;2079:64;2094:48;2135:6;2094:48;;;2079:64;;;2070:73;;2163:6;2156:5;2149:21;2199:4;2191:6;2187:17;2232:4;2225:5;2221:16;2267:3;2258:6;2253:3;2249:16;2246:25;2243:2;;;2284:1;2281;2274:12;2243:2;2294:41;2328:6;2323:3;2318;2294:41;;;1962:379;;;;;;;;2350:442;;2452:3;2445:4;2437:6;2433:17;2429:27;2419:2;;2470:1;2467;2460:12;2419:2;2507:6;2494:20;2529:65;2544:49;2586:6;2544:49;;;2529:65;;;2520:74;;2614:6;2607:5;2600:21;2650:4;2642:6;2638:17;2683:4;2676:5;2672:16;2718:3;2709:6;2704:3;2700:16;2697:25;2694:2;;;2735:1;2732;2725:12;2694:2;2745:41;2779:6;2774:3;2769;2745:41;;;2412:380;;;;;;;;2829:456;;2939:4;2927:9;2922:3;2918:19;2914:30;2911:2;;;2957:1;2954;2947:12;2911:2;2975:20;2990:4;2975:20;;;2966:29;;3042:1;3073:49;3118:3;3109:6;3098:9;3094:22;3073:49;;;3067:3;3060:5;3056:15;3049:74;3005:129;3181:2;3214:49;3259:3;3250:6;3239:9;3235:22;3214:49;;;3207:4;3200:5;3196:16;3189:75;3144:131;2905:380;;;;;3321:494;;3431:4;3419:9;3414:3;3410:19;3406:30;3403:2;;;3449:1;3446;3439:12;3403:2;3467:20;3482:4;3467:20;;;3458:29;;3534:1;3565:68;3629:3;3620:6;3609:9;3605:22;3565:68;;;3559:3;3552:5;3548:15;3541:93;3497:148;3692:2;3725:68;3789:3;3780:6;3769:9;3765:22;3725:68;;;3718:4;3711:5;3707:16;3700:94;3655:150;3397:418;;;;;3850:664;;3962:5;3950:9;3945:3;3941:19;3937:31;3934:2;;;3981:1;3978;3971:12;3934:2;3999:20;4014:4;3999:20;;;3990:29;;4066:1;4097:70;4163:3;4154:6;4143:9;4139:22;4097:70;;;4091:3;4084:5;4080:15;4073:95;4029:150;4226:2;4259:70;4325:3;4316:6;4305:9;4301:22;4259:70;;;4252:4;4245:5;4241:16;4234:96;4189:152;4388:3;4422:70;4488:3;4479:6;4468:9;4464:22;4422:70;;;4415:4;4408:5;4404:16;4397:96;4351:153;3928:586;;;;;4521:118;;4588:46;4626:6;4613:20;4588:46;;;4579:55;;4573:66;;;;;4646:241;;4750:2;4738:9;4729:7;4725:23;4721:32;4718:2;;;4766:1;4763;4756:12;4718:2;4801:1;4818:53;4863:7;4854:6;4843:9;4839:22;4818:53;;;4808:63;;4780:97;4712:175;;;;;4894:366;;;5015:2;5003:9;4994:7;4990:23;4986:32;4983:2;;;5031:1;5028;5021:12;4983:2;5066:1;5083:53;5128:7;5119:6;5108:9;5104:22;5083:53;;;5073:63;;5045:97;5173:2;5191:53;5236:7;5227:6;5216:9;5212:22;5191:53;;;5181:63;;5152:98;4977:283;;;;;;5267:491;;;;5405:2;5393:9;5384:7;5380:23;5376:32;5373:2;;;5421:1;5418;5411:12;5373:2;5456:1;5473:53;5518:7;5509:6;5498:9;5494:22;5473:53;;;5463:63;;5435:97;5563:2;5581:53;5626:7;5617:6;5606:9;5602:22;5581:53;;;5571:63;;5542:98;5671:2;5689:53;5734:7;5725:6;5714:9;5710:22;5689:53;;;5679:63;;5650:98;5367:391;;;;;;5765:721;;;;;5929:3;5917:9;5908:7;5904:23;5900:33;5897:2;;;5946:1;5943;5936:12;5897:2;5981:1;5998:53;6043:7;6034:6;6023:9;6019:22;5998:53;;;5988:63;;5960:97;6088:2;6106:53;6151:7;6142:6;6131:9;6127:22;6106:53;;;6096:63;;6067:98;6196:2;6214:53;6259:7;6250:6;6239:9;6235:22;6214:53;;;6204:63;;6175:98;6332:2;6321:9;6317:18;6304:32;6356:18;6348:6;6345:30;6342:2;;;6388:1;6385;6378:12;6342:2;6408:62;6462:7;6453:6;6442:9;6438:22;6408:62;;;6398:72;;6283:193;5891:595;;;;;;;;6493:360;;;6611:2;6599:9;6590:7;6586:23;6582:32;6579:2;;;6627:1;6624;6617:12;6579:2;6662:1;6679:53;6724:7;6715:6;6704:9;6700:22;6679:53;;;6669:63;;6641:97;6769:2;6787:50;6829:7;6820:6;6809:9;6805:22;6787:50;;;6777:60;;6748:95;6573:280;;;;;;6860:366;;;6981:2;6969:9;6960:7;6956:23;6952:32;6949:2;;;6997:1;6994;6987:12;6949:2;7032:1;7049:53;7094:7;7085:6;7074:9;7070:22;7049:53;;;7039:63;;7011:97;7139:2;7157:53;7202:7;7193:6;7182:9;7178:22;7157:53;;;7147:63;;7118:98;6943:283;;;;;;7233:597;;;;7381:2;7369:9;7360:7;7356:23;7352:32;7349:2;;;7397:1;7394;7387:12;7349:2;7432:1;7449:53;7494:7;7485:6;7474:9;7470:22;7449:53;;;7439:63;;7411:97;7539:2;7557:53;7602:7;7593:6;7582:9;7578:22;7557:53;;;7547:63;;7518:98;7675:2;7664:9;7660:18;7647:32;7699:18;7691:6;7688:30;7685:2;;;7731:1;7728;7721:12;7685:2;7751:63;7806:7;7797:6;7786:9;7782:22;7751:63;;;7741:73;;7626:194;7343:487;;;;;;7837:472;;;7968:2;7956:9;7947:7;7943:23;7939:32;7936:2;;;7984:1;7981;7974:12;7936:2;8019:1;8036:53;8081:7;8072:6;8061:9;8057:22;8036:53;;;8026:63;;7998:97;8154:2;8143:9;8139:18;8126:32;8178:18;8170:6;8167:30;8164:2;;;8210:1;8207;8200:12;8164:2;8230:63;8285:7;8276:6;8265:9;8261:22;8230:63;;;8220:73;;8105:194;7930:379;;;;;;8316:701;;;;8473:2;8461:9;8452:7;8448:23;8444:32;8441:2;;;8489:1;8486;8479:12;8441:2;8524:1;8541:53;8586:7;8577:6;8566:9;8562:22;8541:53;;;8531:63;;8503:97;8659:2;8648:9;8644:18;8631:32;8683:18;8675:6;8672:30;8669:2;;;8715:1;8712;8705:12;8669:2;8735:63;8790:7;8781:6;8770:9;8766:22;8735:63;;;8725:73;;8610:194;8863:2;8852:9;8848:18;8835:32;8887:18;8879:6;8876:30;8873:2;;;8919:1;8916;8909:12;8873:2;8939:62;8993:7;8984:6;8973:9;8969:22;8939:62;;;8929:72;;8814:193;8435:582;;;;;;9024:239;;9127:2;9115:9;9106:7;9102:23;9098:32;9095:2;;;9143:1;9140;9133:12;9095:2;9178:1;9195:52;9239:7;9230:6;9219:9;9215:22;9195:52;;;9185:62;;9157:96;9089:174;;;;;9270:261;;9384:2;9372:9;9363:7;9359:23;9355:32;9352:2;;;9400:1;9397;9390:12;9352:2;9435:1;9452:63;9507:7;9498:6;9487:9;9483:22;9452:63;;;9442:73;;9414:107;9346:185;;;;;9538:472;;;9669:2;9657:9;9648:7;9644:23;9640:32;9637:2;;;9685:1;9682;9675:12;9637:2;9748:1;9737:9;9733:17;9720:31;9771:18;9763:6;9760:30;9757:2;;;9803:1;9800;9793:12;9757:2;9823:63;9878:7;9869:6;9858:9;9854:22;9823:63;;;9813:73;;9699:193;9923:2;9941:53;9986:7;9977:6;9966:9;9962:22;9941:53;;;9931:63;;9902:98;9631:379;;;;;;10017:460;;;10184:3;10172:9;10163:7;10159:23;10155:33;10152:2;;;10201:1;10198;10191:12;10152:2;10236:1;10253:76;10321:7;10312:6;10301:9;10297:22;10253:76;;;10243:86;;10215:120;10366:3;10385:76;10453:7;10444:6;10433:9;10429:22;10385:76;;;10375:86;;10345:122;10146:331;;;;;;10484:241;;10588:2;10576:9;10567:7;10563:23;10559:32;10556:2;;;10604:1;10601;10594:12;10556:2;10639:1;10656:53;10701:7;10692:6;10681:9;10677:22;10656:53;;;10646:63;;10618:97;10550:175;;;;;10732:1067;;;;;;;10977:3;10965:9;10956:7;10952:23;10948:33;10945:2;;;10994:1;10991;10984:12;10945:2;11029:1;11046:53;11091:7;11082:6;11071:9;11067:22;11046:53;;;11036:63;;11008:97;11136:2;11154:53;11199:7;11190:6;11179:9;11175:22;11154:53;;;11144:63;;11115:98;11244:2;11262:53;11307:7;11298:6;11287:9;11283:22;11262:53;;;11252:63;;11223:98;11380:2;11369:9;11365:18;11352:32;11404:18;11396:6;11393:30;11390:2;;;11436:1;11433;11426:12;11390:2;11456:63;11511:7;11502:6;11491:9;11487:22;11456:63;;;11446:73;;11331:194;11556:3;11575:76;11643:7;11634:6;11623:9;11619:22;11575:76;;;11565:86;;11535:122;11688:3;11707:76;11775:7;11766:6;11755:9;11751:22;11707:76;;;11697:86;;11667:122;10939:860;;;;;;;;;11806:142;11897:45;11936:5;11897:45;;;11892:3;11885:58;11879:69;;;11955:120;12038:31;12063:5;12038:31;;;12033:3;12026:44;12020:55;;;12082:111;12159:28;12181:5;12159:28;;;12154:3;12147:41;12141:52;;;12200:343;;12310:38;12342:5;12310:38;;;12360:70;12423:6;12418:3;12360:70;;;12353:77;;12435:52;12480:6;12475:3;12468:4;12461:5;12457:16;12435:52;;;12508:29;12530:6;12508:29;;;12503:3;12499:39;12492:46;;12290:253;;;;;;12550:347;;12662:39;12695:5;12662:39;;;12713:71;12777:6;12772:3;12713:71;;;12706:78;;12789:52;12834:6;12829:3;12822:4;12815:5;12811:16;12789:52;;;12862:29;12884:6;12862:29;;;12857:3;12853:39;12846:46;;12642:255;;;;;;12905:364;;13065:67;13129:2;13124:3;13065:67;;;13058:74;;13165:66;13161:1;13156:3;13152:11;13145:87;13260:2;13255:3;13251:12;13244:19;;13051:218;;;;13278:364;;13438:67;13502:2;13497:3;13438:67;;;13431:74;;13538:66;13534:1;13529:3;13525:11;13518:87;13633:2;13628:3;13624:12;13617:19;;13424:218;;;;13651:364;;13811:67;13875:2;13870:3;13811:67;;;13804:74;;13911:66;13907:1;13902:3;13898:11;13891:87;14006:2;14001:3;13997:12;13990:19;;13797:218;;;;14024:465;;14184:67;14248:2;14243:3;14184:67;;;14177:74;;14284:66;14280:1;14275:3;14271:11;14264:87;14385:66;14380:2;14375:3;14371:12;14364:88;14480:2;14475:3;14471:12;14464:19;;14170:319;;;;14498:364;;14658:67;14722:2;14717:3;14658:67;;;14651:74;;14758:66;14754:1;14749:3;14745:11;14738:87;14853:2;14848:3;14844:12;14837:19;;14644:218;;;;14871:364;;15031:67;15095:2;15090:3;15031:67;;;15024:74;;15131:66;15127:1;15122:3;15118:11;15111:87;15226:2;15221:3;15217:12;15210:19;;15017:218;;;;15244:364;;15404:67;15468:2;15463:3;15404:67;;;15397:74;;15504:66;15500:1;15495:3;15491:11;15484:87;15599:2;15594:3;15590:12;15583:19;;15390:218;;;;15617:465;;15777:67;15841:2;15836:3;15777:67;;;15770:74;;15877:66;15873:1;15868:3;15864:11;15857:87;15978:66;15973:2;15968:3;15964:12;15957:88;16073:2;16068:3;16064:12;16057:19;;15763:319;;;;16091:364;;16251:67;16315:2;16310:3;16251:67;;;16244:74;;16351:66;16347:1;16342:3;16338:11;16331:87;16446:2;16441:3;16437:12;16430:19;;16237:218;;;;16464:465;;16624:67;16688:2;16683:3;16624:67;;;16617:74;;16724:66;16720:1;16715:3;16711:11;16704:87;16825:66;16820:2;16815:3;16811:12;16804:88;16920:2;16915:3;16911:12;16904:19;;16610:319;;;;16938:465;;17098:67;17162:2;17157:3;17098:67;;;17091:74;;17198:66;17194:1;17189:3;17185:11;17178:87;17299:66;17294:2;17289:3;17285:12;17278:88;17394:2;17389:3;17385:12;17378:19;;17084:319;;;;17412:465;;17572:67;17636:2;17631:3;17572:67;;;17565:74;;17672:66;17668:1;17663:3;17659:11;17652:87;17773:66;17768:2;17763:3;17759:12;17752:88;17868:2;17863:3;17859:12;17852:19;;17558:319;;;;17886:465;;18046:67;18110:2;18105:3;18046:67;;;18039:74;;18146:66;18142:1;18137:3;18133:11;18126:87;18247:66;18242:2;18237:3;18233:12;18226:88;18342:2;18337:3;18333:12;18326:19;;18032:319;;;;18360:364;;18520:67;18584:2;18579:3;18520:67;;;18513:74;;18620:66;18616:1;18611:3;18607:11;18600:87;18715:2;18710:3;18706:12;18699:19;;18506:218;;;;18732:120;18815:31;18840:5;18815:31;;;18810:3;18803:44;18797:55;;;18859:213;;18977:2;18966:9;18962:18;18954:26;;18991:71;19059:1;19048:9;19044:17;19035:6;18991:71;;;18948:124;;;;;19079:229;;19205:2;19194:9;19190:18;19182:26;;19219:79;19295:1;19284:9;19280:17;19271:6;19219:79;;;19176:132;;;;;19315:647;;19543:3;19532:9;19528:19;19520:27;;19558:79;19634:1;19623:9;19619:17;19610:6;19558:79;;;19648:72;19716:2;19705:9;19701:18;19692:6;19648:72;;;19731;19799:2;19788:9;19784:18;19775:6;19731:72;;;19851:9;19845:4;19841:20;19836:2;19825:9;19821:18;19814:48;19876:76;19947:4;19938:6;19876:76;;;19868:84;;19514:448;;;;;;;;19969:201;;20081:2;20070:9;20066:18;20058:26;;20095:65;20157:1;20146:9;20142:17;20133:6;20095:65;;;20052:118;;;;;20177:301;;20315:2;20304:9;20300:18;20292:26;;20365:9;20359:4;20355:20;20351:1;20340:9;20336:17;20329:47;20390:78;20463:4;20454:6;20390:78;;;20382:86;;20286:192;;;;;20485:407;;20676:2;20665:9;20661:18;20653:26;;20726:9;20720:4;20716:20;20712:1;20701:9;20697:17;20690:47;20751:131;20877:4;20751:131;;;20743:139;;20647:245;;;;20899:407;;21090:2;21079:9;21075:18;21067:26;;21140:9;21134:4;21130:20;21126:1;21115:9;21111:17;21104:47;21165:131;21291:4;21165:131;;;21157:139;;21061:245;;;;21313:407;;21504:2;21493:9;21489:18;21481:26;;21554:9;21548:4;21544:20;21540:1;21529:9;21525:17;21518:47;21579:131;21705:4;21579:131;;;21571:139;;21475:245;;;;21727:407;;21918:2;21907:9;21903:18;21895:26;;21968:9;21962:4;21958:20;21954:1;21943:9;21939:17;21932:47;21993:131;22119:4;21993:131;;;21985:139;;21889:245;;;;22141:407;;22332:2;22321:9;22317:18;22309:26;;22382:9;22376:4;22372:20;22368:1;22357:9;22353:17;22346:47;22407:131;22533:4;22407:131;;;22399:139;;22303:245;;;;22555:407;;22746:2;22735:9;22731:18;22723:26;;22796:9;22790:4;22786:20;22782:1;22771:9;22767:17;22760:47;22821:131;22947:4;22821:131;;;22813:139;;22717:245;;;;22969:407;;23160:2;23149:9;23145:18;23137:26;;23210:9;23204:4;23200:20;23196:1;23185:9;23181:17;23174:47;23235:131;23361:4;23235:131;;;23227:139;;23131:245;;;;23383:407;;23574:2;23563:9;23559:18;23551:26;;23624:9;23618:4;23614:20;23610:1;23599:9;23595:17;23588:47;23649:131;23775:4;23649:131;;;23641:139;;23545:245;;;;23797:407;;23988:2;23977:9;23973:18;23965:26;;24038:9;24032:4;24028:20;24024:1;24013:9;24009:17;24002:47;24063:131;24189:4;24063:131;;;24055:139;;23959:245;;;;24211:407;;24402:2;24391:9;24387:18;24379:26;;24452:9;24446:4;24442:20;24438:1;24427:9;24423:17;24416:47;24477:131;24603:4;24477:131;;;24469:139;;24373:245;;;;24625:407;;24816:2;24805:9;24801:18;24793:26;;24866:9;24860:4;24856:20;24852:1;24841:9;24837:17;24830:47;24891:131;25017:4;24891:131;;;24883:139;;24787:245;;;;25039:407;;25230:2;25219:9;25215:18;25207:26;;25280:9;25274:4;25270:20;25266:1;25255:9;25251:17;25244:47;25305:131;25431:4;25305:131;;;25297:139;;25201:245;;;;25453:407;;25644:2;25633:9;25629:18;25621:26;;25694:9;25688:4;25684:20;25680:1;25669:9;25665:17;25658:47;25719:131;25845:4;25719:131;;;25711:139;;25615:245;;;;25867:407;;26058:2;26047:9;26043:18;26035:26;;26108:9;26102:4;26098:20;26094:1;26083:9;26079:17;26072:47;26133:131;26259:4;26133:131;;;26125:139;;26029:245;;;;26281:213;;26399:2;26388:9;26384:18;26376:26;;26413:71;26481:1;26470:9;26466:17;26457:6;26413:71;;;26370:124;;;;;26501:256;;26563:2;26557:9;26547:19;;26601:4;26593:6;26589:17;26700:6;26688:10;26685:22;26664:18;26652:10;26649:34;26646:62;26643:2;;;26721:1;26718;26711:12;26643:2;26741:10;26737:2;26730:22;26541:216;;;;;26764:229;;26917:18;26909:6;26906:30;26903:2;;;26949:1;26946;26939:12;26903:2;26978:4;26970:6;26966:17;26958:25;;26840:153;;;;27000:233;;27157:18;27149:6;27146:30;27143:2;;;27189:1;27186;27179:12;27143:2;27218:4;27210:6;27206:17;27198:25;;27080:153;;;;27240:258;;27383:18;27375:6;27372:30;27369:2;;;27415:1;27412;27405:12;27369:2;27459:4;27455:9;27448:4;27440:6;27436:17;27432:33;27424:41;;27488:4;27482;27478:15;27470:23;;27306:192;;;;27505:259;;27649:18;27641:6;27638:30;27635:2;;;27681:1;27678;27671:12;27635:2;27725:4;27721:9;27714:4;27706:6;27702:17;27698:33;27690:41;;27754:4;27748;27744:15;27736:23;;27572:192;;;;27771:91;;27851:5;27845:12;27835:22;;27829:33;;;;27869:92;;27950:5;27944:12;27934:22;;27928:33;;;;27969:162;;28083:6;28078:3;28071:19;28120:4;28115:3;28111:14;28096:29;;28064:67;;;;;28140:163;;28255:6;28250:3;28243:19;28292:4;28287:3;28283:14;28268:29;;28236:67;;;;;28311:105;;28380:31;28405:5;28380:31;;;28369:42;;28363:53;;;;28423:92;;28503:5;28496:13;28489:21;28478:32;;28472:43;;;;28522:128;;28602:42;28595:5;28591:54;28580:65;;28574:76;;;;28657:79;;28726:5;28715:16;;28709:27;;;;28743:105;;28812:31;28837:5;28812:31;;;28801:42;;28795:53;;;;28855:92;;28935:5;28928:13;28921:21;28910:32;;28904:43;;;;28954:79;;29023:5;29012:16;;29006:27;;;;29040:151;;29119:66;29112:5;29108:78;29097:89;;29091:100;;;;29198:128;;29278:42;29271:5;29267:54;29256:65;;29250:76;;;;29333:79;;29402:5;29391:16;;29385:27;;;;29419:129;;29506:37;29537:5;29506:37;;;29493:50;;29487:61;;;;29555:121;;29634:37;29665:5;29634:37;;;29621:50;;29615:61;;;;29683:115;;29762:31;29787:5;29762:31;;;29749:44;;29743:55;;;;29806:145;29887:6;29882:3;29877;29864:30;29943:1;29934:6;29929:3;29925:16;29918:27;29857:94;;;;29960:268;30025:1;30032:101;30046:6;30043:1;30040:13;30032:101;;;30122:1;30117:3;30113:11;30107:18;30103:1;30098:3;30094:11;30087:39;30068:2;30065:1;30061:10;30056:15;;30032:101;;;30148:6;30145:1;30142:13;30139:2;;;30213:1;30204:6;30199:3;30195:16;30188:27;30139:2;30009:219;;;;;30236:97;;30324:2;30320:7;30315:2;30308:5;30304:14;30300:28;30290:38;;30284:49;;;",
  "source": "//pragma solidity >=0.4.21 <0.6.0;\npragma solidity >=0.5.6;\npragma experimental ABIEncoderV2;\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n\nimport \"./Oraclize.sol\";\n//import \"../contracts/zokrates/code/square/Verifier.sol\";\nimport \"./ERC721Mintable.sol\";\nimport \"./ERC721.sol\";\nimport \"./ERC721Metadata.sol\";\nimport \"../contracts/zokrates/code/square/squareVeri.sol\";\n\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\n\ncontract SolnSquareVerifier is ERC721Mintable, squareVeri {\n\n// TODO define a solutions struct that can hold an index & an address\naddress contractOwner = 0x88A6a89522cABed146e8F185C3766cA74327a665;\nuint256 index = 0;\nstruct solutions{\n    uint256 index;\n    bool exists;\n    address owner;\n}\n//uint256 totalSupplyCount = ERC721Mintable.totalSupplyToken();\n//string baseTokenURIMeta = ERC721Mintable.baseTokenURI();\n\n// TODO define an array of the above struct\nsolutions[] zokSolutions;\n\n\n// TODO define a mapping to store unique solutions submitted\nmapping (uint256 => solutions) uniSolutions;\n\n\n\n// TODO Create an event to emit when a solution is added\nevent solutionAdded(uint256 index);\nevent NFTminted(uint256 tokenId);\n\n\n// TODO Create a function to add the solutions to the array and emit the event\nfunction addSolutions(address owner) public returns(uint256){\n    uniSolutions[index] = solutions({\n                                        index: index,\n                                        exists : true, \n                                        owner: owner\n                                        \n                                        });\n    zokSolutions.push(uniSolutions[index]);\n    //return uniSolutions[index].exists;\n    return zokSolutions.length;\n    index++;\n    emit solutionAdded(index);\n}\n\n\n\n// TODO Create a function to mint new NFT only after the solution has been verified\n//  - make sure the solution is unique (has not been used before)\n//  - make sure you handle metadata as well as tokenSuply\n\n\nfunction mintNFT(uint256 totalSupplyCount,address owner, uint256 tokenId, string memory tokenURI, Verifier.Proof memory proof,uint[2] memory input) public returns(bool){\n    require(squareVeri.verifyzok(proof, input) == true, \"The solution hasnt been verified\");\n    //require(zokSolutions[index].owner != contractOwner, \"The tokenId does not represent a valid token\");\n    require(totalSupplyCount < 11, \"Total token Supply has ended\");\n\n    for(uint8  i = 0; i<= zokSolutions.length; i++ ){\n        if(zokSolutions[i].exists == false) {\n            ERC721Mintable.mint(owner, tokenId, tokenURI);\n            ERC721Mintable.setTokenURI(tokenURI, tokenId);\n            emit NFTminted(tokenId);\n            return true; \n            }  \n        }    \n      //index++; \n    }\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "C:/Users/saniy/OneDrive/Desktop/blockchain/Capstone-RealEstate/Blockchain-Capstone-master/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/C/Users/saniy/OneDrive/Desktop/blockchain/Capstone-RealEstate/Blockchain-Capstone-master/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7783
      ]
    },
    "id": 7784,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7628,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:24:9"
      },
      {
        "id": 7629,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "60:33:9"
      },
      {
        "absolutePath": "/C/Users/saniy/OneDrive/Desktop/blockchain/Capstone-RealEstate/Blockchain-Capstone-master/contracts/Oraclize.sol",
        "file": "./Oraclize.sol",
        "id": 7630,
        "nodeType": "ImportDirective",
        "scope": 7784,
        "sourceUnit": 7454,
        "src": "203:24:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/saniy/OneDrive/Desktop/blockchain/Capstone-RealEstate/Blockchain-Capstone-master/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7631,
        "nodeType": "ImportDirective",
        "scope": 7784,
        "sourceUnit": 1153,
        "src": "287:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/saniy/OneDrive/Desktop/blockchain/Capstone-RealEstate/Blockchain-Capstone-master/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 7632,
        "nodeType": "ImportDirective",
        "scope": 7784,
        "sourceUnit": 556,
        "src": "318:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/saniy/OneDrive/Desktop/blockchain/Capstone-RealEstate/Blockchain-Capstone-master/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 7633,
        "nodeType": "ImportDirective",
        "scope": 7784,
        "sourceUnit": 964,
        "src": "341:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/saniy/OneDrive/Desktop/blockchain/Capstone-RealEstate/Blockchain-Capstone-master/contracts/zokrates/code/square/squareVeri.sol",
        "file": "../contracts/zokrates/code/square/squareVeri.sol",
        "id": 7634,
        "nodeType": "ImportDirective",
        "scope": 7784,
        "sourceUnit": 7821,
        "src": "372:58:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7635,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1152,
              "src": "567:14:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$1152",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 7636,
            "nodeType": "InheritanceSpecifier",
            "src": "567:14:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7637,
              "name": "squareVeri",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7820,
              "src": "583:10:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_squareVeri_$7820",
                "typeString": "contract squareVeri"
              }
            },
            "id": 7638,
            "nodeType": "InheritanceSpecifier",
            "src": "583:10:9"
          }
        ],
        "contractDependencies": [
          555,
          862,
          963,
          1152,
          52,
          7453,
          7546,
          7626,
          7820,
          8742
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7783,
        "linearizedBaseContracts": [
          7783,
          7820,
          8742,
          1152,
          963,
          7453,
          862,
          555,
          52,
          7626,
          7546
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7641,
            "name": "contractOwner",
            "nodeType": "VariableDeclaration",
            "scope": 7783,
            "src": "667:66:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7639,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "667:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307838384136613839353232634142656431343665384631383543333736366341373433323761363635",
              "id": 7640,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "691:42:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x88A6a89522cABed146e8F185C3766cA74327a665"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7644,
            "name": "index",
            "nodeType": "VariableDeclaration",
            "scope": 7783,
            "src": "735:17:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7642,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "735:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7643,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "751:1:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "SolnSquareVerifier.solutions",
            "id": 7651,
            "members": [
              {
                "constant": false,
                "id": 7646,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7651,
                "src": "776:13:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7645,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "776:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7648,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "scope": 7651,
                "src": "795:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7647,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "795:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7650,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 7651,
                "src": "812:13:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7649,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "812:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "solutions",
            "nodeType": "StructDefinition",
            "scope": 7783,
            "src": "754:74:9",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7654,
            "name": "zokSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7783,
            "src": "997:24:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_solutions_$7651_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.solutions[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7652,
                "name": "solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7651,
                "src": "997:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_solutions_$7651_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.solutions"
                }
              },
              "id": 7653,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "997:11:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_solutions_$7651_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.solutions[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7658,
            "name": "uniSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7783,
            "src": "1086:43:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_solutions_$7651_storage_$",
              "typeString": "mapping(uint256 => struct SolnSquareVerifier.solutions)"
            },
            "typeName": {
              "id": 7657,
              "keyType": {
                "id": 7655,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1095:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1086:30:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_solutions_$7651_storage_$",
                "typeString": "mapping(uint256 => struct SolnSquareVerifier.solutions)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7656,
                "name": "solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7651,
                "src": "1106:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_solutions_$7651_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.solutions"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7662,
            "name": "solutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7660,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7662,
                  "src": "1211:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1210:15:9"
            },
            "src": "1191:35:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7666,
            "name": "NFTminted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7664,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7666,
                  "src": "1243:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1242:17:9"
            },
            "src": "1227:33:9"
          },
          {
            "body": {
              "id": 7701,
              "nodeType": "Block",
              "src": "1402:450:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7673,
                        "name": "uniSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7658,
                        "src": "1408:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_solutions_$7651_storage_$",
                          "typeString": "mapping(uint256 => struct SolnSquareVerifier.solutions storage ref)"
                        }
                      },
                      "id": 7675,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7674,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7644,
                        "src": "1421:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1408:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7651_storage",
                        "typeString": "struct SolnSquareVerifier.solutions storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7677,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7644,
                          "src": "1489:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1545:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "argumentTypes": null,
                          "id": 7679,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7668,
                          "src": "1599:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7676,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7651,
                        "src": "1430:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_solutions_$7651_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.solutions storage pointer)"
                        }
                      },
                      "id": 7680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "index",
                        "exists",
                        "owner"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1430:258:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7651_memory",
                        "typeString": "struct SolnSquareVerifier.solutions memory"
                      }
                    },
                    "src": "1408:280:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_solutions_$7651_storage",
                      "typeString": "struct SolnSquareVerifier.solutions storage ref"
                    }
                  },
                  "id": 7682,
                  "nodeType": "ExpressionStatement",
                  "src": "1408:280:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7686,
                          "name": "uniSolutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7658,
                          "src": "1712:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_solutions_$7651_storage_$",
                            "typeString": "mapping(uint256 => struct SolnSquareVerifier.solutions storage ref)"
                          }
                        },
                        "id": 7688,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7687,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7644,
                          "src": "1725:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1712:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_solutions_$7651_storage",
                          "typeString": "struct SolnSquareVerifier.solutions storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_solutions_$7651_storage",
                          "typeString": "struct SolnSquareVerifier.solutions storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7683,
                        "name": "zokSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7654,
                        "src": "1694:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_solutions_$7651_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.solutions storage ref[] storage ref"
                        }
                      },
                      "id": 7685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1694:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_solutions_$7651_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.solutions storage ref) returns (uint256)"
                      }
                    },
                    "id": 7689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1694:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7690,
                  "nodeType": "ExpressionStatement",
                  "src": "1694:38:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 7691,
                      "name": "zokSolutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7654,
                      "src": "1786:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_solutions_$7651_storage_$dyn_storage",
                        "typeString": "struct SolnSquareVerifier.solutions storage ref[] storage ref"
                      }
                    },
                    "id": 7692,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1786:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7672,
                  "id": 7693,
                  "nodeType": "Return",
                  "src": "1779:26:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1811:7:9",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 7694,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7644,
                      "src": "1811:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7696,
                  "nodeType": "ExpressionStatement",
                  "src": "1811:7:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7698,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7644,
                        "src": "1843:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7697,
                      "name": "solutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7662,
                      "src": "1829:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1829:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7700,
                  "nodeType": "EmitStatement",
                  "src": "1824:25:9"
                }
              ]
            },
            "documentation": null,
            "id": 7702,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolutions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7668,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 7702,
                  "src": "1364:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1364:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1363:15:9"
            },
            "returnParameters": {
              "id": 7672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7671,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7702,
                  "src": "1394:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1393:9:9"
            },
            "scope": 7783,
            "src": "1342:510:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7781,
              "nodeType": "Block",
              "src": "2234:605:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7724,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7712,
                              "src": "2269:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proof_$8416_memory_ptr",
                                "typeString": "struct Verifier.Proof memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 7725,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7716,
                              "src": "2276:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Proof_$8416_memory_ptr",
                                "typeString": "struct Verifier.Proof memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 7722,
                              "name": "squareVeri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7820,
                              "src": "2248:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_squareVeri_$7820_$",
                                "typeString": "type(contract squareVeri)"
                              }
                            },
                            "id": 7723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyzok",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7819,
                            "src": "2248:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Proof_$8416_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) returns (bool)"
                            }
                          },
                          "id": 7726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2248:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2286:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2248:42:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520736f6c7574696f6e206861736e74206265656e207665726966696564",
                        "id": 7729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2292:34:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b83171baf46fafec6341969945a4cf28607032f60a003b748f9b586f886ba93",
                          "typeString": "literal_string \"The solution hasnt been verified\""
                        },
                        "value": "The solution hasnt been verified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b83171baf46fafec6341969945a4cf28607032f60a003b748f9b586f886ba93",
                          "typeString": "literal_string \"The solution hasnt been verified\""
                        }
                      ],
                      "id": 7721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8977,
                        8978
                      ],
                      "referencedDeclaration": 8978,
                      "src": "2240:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2240:87:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7731,
                  "nodeType": "ExpressionStatement",
                  "src": "2240:87:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7733,
                          "name": "totalSupplyCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7704,
                          "src": "2448:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3131",
                          "id": 7734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2467:2:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_11_by_1",
                            "typeString": "int_const 11"
                          },
                          "value": "11"
                        },
                        "src": "2448:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f74616c20746f6b656e20537570706c792068617320656e646564",
                        "id": 7736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2471:30:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57ba69fc0475f171fcaf751a8ace5f3004936b4f8ae8eb8148bd94c04b64ef0f",
                          "typeString": "literal_string \"Total token Supply has ended\""
                        },
                        "value": "Total token Supply has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57ba69fc0475f171fcaf751a8ace5f3004936b4f8ae8eb8148bd94c04b64ef0f",
                          "typeString": "literal_string \"Total token Supply has ended\""
                        }
                      ],
                      "id": 7732,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8977,
                        8978
                      ],
                      "referencedDeclaration": 8978,
                      "src": "2440:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:62:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7738,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:62:9"
                },
                {
                  "body": {
                    "id": 7779,
                    "nodeType": "Block",
                    "src": "2557:254:9",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 7755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 7750,
                                "name": "zokSolutions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7654,
                                "src": "2570:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_solutions_$7651_storage_$dyn_storage",
                                  "typeString": "struct SolnSquareVerifier.solutions storage ref[] storage ref"
                                }
                              },
                              "id": 7752,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 7751,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7740,
                                "src": "2583:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2570:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_solutions_$7651_storage",
                                "typeString": "struct SolnSquareVerifier.solutions storage ref"
                              }
                            },
                            "id": 7753,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exists",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7648,
                            "src": "2570:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 7754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2596:5:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2570:31:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 7778,
                        "nodeType": "IfStatement",
                        "src": "2567:232:9",
                        "trueBody": {
                          "id": 7777,
                          "nodeType": "Block",
                          "src": "2603:196:9",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7759,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7706,
                                    "src": "2637:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 7760,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7708,
                                    "src": "2644:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 7761,
                                    "name": "tokenURI",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7710,
                                    "src": "2653:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7756,
                                    "name": "ERC721Mintable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1152,
                                    "src": "2617:14:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC721Mintable_$1152_$",
                                      "typeString": "type(contract ERC721Mintable)"
                                    }
                                  },
                                  "id": 7758,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1068,
                                  "src": "2617:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (address,uint256,string memory) returns (uint256)"
                                  }
                                },
                                "id": 7762,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2617:45:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7763,
                              "nodeType": "ExpressionStatement",
                              "src": "2617:45:9"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7767,
                                    "name": "tokenURI",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7710,
                                    "src": "2703:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 7768,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7708,
                                    "src": "2713:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7764,
                                    "name": "ERC721Mintable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1152,
                                    "src": "2676:14:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC721Mintable_$1152_$",
                                      "typeString": "type(contract ERC721Mintable)"
                                    }
                                  },
                                  "id": 7766,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "setTokenURI",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1105,
                                  "src": "2676:26:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (string memory,uint256) returns (string memory)"
                                  }
                                },
                                "id": 7769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2676:45:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 7770,
                              "nodeType": "ExpressionStatement",
                              "src": "2676:45:9"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7772,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7708,
                                    "src": "2750:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 7771,
                                  "name": "NFTminted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7666,
                                  "src": "2740:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 7773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2740:18:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 7774,
                              "nodeType": "EmitStatement",
                              "src": "2735:23:9"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 7775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2779:4:9",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 7720,
                              "id": 7776,
                              "nodeType": "Return",
                              "src": "2772:11:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7743,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7740,
                      "src": "2527:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7744,
                        "name": "zokSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7654,
                        "src": "2531:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_solutions_$7651_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.solutions storage ref[] storage ref"
                        }
                      },
                      "id": 7745,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2531:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2527:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7780,
                  "initializationExpression": {
                    "assignments": [
                      7740
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7740,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 7780,
                        "src": "2513:8:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 7739,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2513:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 7742,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2524:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2513:12:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 7748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2552:3:9",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 7747,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7740,
                        "src": "2552:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 7749,
                    "nodeType": "ExpressionStatement",
                    "src": "2552:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "2509:302:9"
                }
              ]
            },
            "documentation": null,
            "id": 7782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7704,
                  "name": "totalSupplyCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7782,
                  "src": "2083:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7703,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2083:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7706,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 7782,
                  "src": "2108:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2108:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7708,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7782,
                  "src": "2123:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7710,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 7782,
                  "src": "2140:22:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7709,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2140:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7712,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7782,
                  "src": "2164:27:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8416_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7711,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8416,
                    "src": "2164:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8416_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7716,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7782,
                  "src": "2192:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7713,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2192:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7715,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2197:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2192:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2082:131:9"
            },
            "returnParameters": {
              "id": 7720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7719,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7782,
                  "src": "2229:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7718,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2229:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2228:6:9"
            },
            "scope": 7783,
            "src": "2066:773:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7784,
        "src": "536:2307:9"
      }
    ],
    "src": "35:2833:9"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/saniy/OneDrive/Desktop/blockchain/Capstone-RealEstate/Blockchain-Capstone-master/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7783
      ]
    },
    "id": 7784,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7628,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:24:9"
      },
      {
        "id": 7629,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "60:33:9"
      },
      {
        "absolutePath": "/C/Users/saniy/OneDrive/Desktop/blockchain/Capstone-RealEstate/Blockchain-Capstone-master/contracts/Oraclize.sol",
        "file": "./Oraclize.sol",
        "id": 7630,
        "nodeType": "ImportDirective",
        "scope": 7784,
        "sourceUnit": 7454,
        "src": "203:24:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/saniy/OneDrive/Desktop/blockchain/Capstone-RealEstate/Blockchain-Capstone-master/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7631,
        "nodeType": "ImportDirective",
        "scope": 7784,
        "sourceUnit": 1153,
        "src": "287:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/saniy/OneDrive/Desktop/blockchain/Capstone-RealEstate/Blockchain-Capstone-master/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 7632,
        "nodeType": "ImportDirective",
        "scope": 7784,
        "sourceUnit": 556,
        "src": "318:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/saniy/OneDrive/Desktop/blockchain/Capstone-RealEstate/Blockchain-Capstone-master/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 7633,
        "nodeType": "ImportDirective",
        "scope": 7784,
        "sourceUnit": 964,
        "src": "341:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/saniy/OneDrive/Desktop/blockchain/Capstone-RealEstate/Blockchain-Capstone-master/contracts/zokrates/code/square/squareVeri.sol",
        "file": "../contracts/zokrates/code/square/squareVeri.sol",
        "id": 7634,
        "nodeType": "ImportDirective",
        "scope": 7784,
        "sourceUnit": 7821,
        "src": "372:58:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7635,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1152,
              "src": "567:14:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$1152",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 7636,
            "nodeType": "InheritanceSpecifier",
            "src": "567:14:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7637,
              "name": "squareVeri",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7820,
              "src": "583:10:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_squareVeri_$7820",
                "typeString": "contract squareVeri"
              }
            },
            "id": 7638,
            "nodeType": "InheritanceSpecifier",
            "src": "583:10:9"
          }
        ],
        "contractDependencies": [
          555,
          862,
          963,
          1152,
          52,
          7453,
          7546,
          7626,
          7820,
          8742
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7783,
        "linearizedBaseContracts": [
          7783,
          7820,
          8742,
          1152,
          963,
          7453,
          862,
          555,
          52,
          7626,
          7546
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7641,
            "name": "contractOwner",
            "nodeType": "VariableDeclaration",
            "scope": 7783,
            "src": "667:66:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7639,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "667:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307838384136613839353232634142656431343665384631383543333736366341373433323761363635",
              "id": 7640,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "691:42:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x88A6a89522cABed146e8F185C3766cA74327a665"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7644,
            "name": "index",
            "nodeType": "VariableDeclaration",
            "scope": 7783,
            "src": "735:17:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7642,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "735:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7643,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "751:1:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "SolnSquareVerifier.solutions",
            "id": 7651,
            "members": [
              {
                "constant": false,
                "id": 7646,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7651,
                "src": "776:13:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7645,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "776:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7648,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "scope": 7651,
                "src": "795:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7647,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "795:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7650,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 7651,
                "src": "812:13:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7649,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "812:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "solutions",
            "nodeType": "StructDefinition",
            "scope": 7783,
            "src": "754:74:9",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7654,
            "name": "zokSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7783,
            "src": "997:24:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_solutions_$7651_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.solutions[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7652,
                "name": "solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7651,
                "src": "997:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_solutions_$7651_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.solutions"
                }
              },
              "id": 7653,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "997:11:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_solutions_$7651_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.solutions[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7658,
            "name": "uniSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7783,
            "src": "1086:43:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_solutions_$7651_storage_$",
              "typeString": "mapping(uint256 => struct SolnSquareVerifier.solutions)"
            },
            "typeName": {
              "id": 7657,
              "keyType": {
                "id": 7655,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1095:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1086:30:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_solutions_$7651_storage_$",
                "typeString": "mapping(uint256 => struct SolnSquareVerifier.solutions)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7656,
                "name": "solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7651,
                "src": "1106:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_solutions_$7651_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.solutions"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7662,
            "name": "solutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7660,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7662,
                  "src": "1211:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1210:15:9"
            },
            "src": "1191:35:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7666,
            "name": "NFTminted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7664,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7666,
                  "src": "1243:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1242:17:9"
            },
            "src": "1227:33:9"
          },
          {
            "body": {
              "id": 7701,
              "nodeType": "Block",
              "src": "1402:450:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7673,
                        "name": "uniSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7658,
                        "src": "1408:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_solutions_$7651_storage_$",
                          "typeString": "mapping(uint256 => struct SolnSquareVerifier.solutions storage ref)"
                        }
                      },
                      "id": 7675,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7674,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7644,
                        "src": "1421:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1408:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7651_storage",
                        "typeString": "struct SolnSquareVerifier.solutions storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7677,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7644,
                          "src": "1489:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1545:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "argumentTypes": null,
                          "id": 7679,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7668,
                          "src": "1599:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7676,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7651,
                        "src": "1430:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_solutions_$7651_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.solutions storage pointer)"
                        }
                      },
                      "id": 7680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "index",
                        "exists",
                        "owner"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1430:258:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solutions_$7651_memory",
                        "typeString": "struct SolnSquareVerifier.solutions memory"
                      }
                    },
                    "src": "1408:280:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_solutions_$7651_storage",
                      "typeString": "struct SolnSquareVerifier.solutions storage ref"
                    }
                  },
                  "id": 7682,
                  "nodeType": "ExpressionStatement",
                  "src": "1408:280:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7686,
                          "name": "uniSolutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7658,
                          "src": "1712:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_solutions_$7651_storage_$",
                            "typeString": "mapping(uint256 => struct SolnSquareVerifier.solutions storage ref)"
                          }
                        },
                        "id": 7688,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7687,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7644,
                          "src": "1725:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1712:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_solutions_$7651_storage",
                          "typeString": "struct SolnSquareVerifier.solutions storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_solutions_$7651_storage",
                          "typeString": "struct SolnSquareVerifier.solutions storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7683,
                        "name": "zokSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7654,
                        "src": "1694:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_solutions_$7651_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.solutions storage ref[] storage ref"
                        }
                      },
                      "id": 7685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1694:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_solutions_$7651_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.solutions storage ref) returns (uint256)"
                      }
                    },
                    "id": 7689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1694:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7690,
                  "nodeType": "ExpressionStatement",
                  "src": "1694:38:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 7691,
                      "name": "zokSolutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7654,
                      "src": "1786:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_solutions_$7651_storage_$dyn_storage",
                        "typeString": "struct SolnSquareVerifier.solutions storage ref[] storage ref"
                      }
                    },
                    "id": 7692,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1786:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7672,
                  "id": 7693,
                  "nodeType": "Return",
                  "src": "1779:26:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1811:7:9",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 7694,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7644,
                      "src": "1811:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7696,
                  "nodeType": "ExpressionStatement",
                  "src": "1811:7:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7698,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7644,
                        "src": "1843:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7697,
                      "name": "solutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7662,
                      "src": "1829:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1829:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7700,
                  "nodeType": "EmitStatement",
                  "src": "1824:25:9"
                }
              ]
            },
            "documentation": null,
            "id": 7702,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolutions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7668,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 7702,
                  "src": "1364:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1364:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1363:15:9"
            },
            "returnParameters": {
              "id": 7672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7671,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7702,
                  "src": "1394:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1393:9:9"
            },
            "scope": 7783,
            "src": "1342:510:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7781,
              "nodeType": "Block",
              "src": "2234:605:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7724,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7712,
                              "src": "2269:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proof_$8416_memory_ptr",
                                "typeString": "struct Verifier.Proof memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 7725,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7716,
                              "src": "2276:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Proof_$8416_memory_ptr",
                                "typeString": "struct Verifier.Proof memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 7722,
                              "name": "squareVeri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7820,
                              "src": "2248:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_squareVeri_$7820_$",
                                "typeString": "type(contract squareVeri)"
                              }
                            },
                            "id": 7723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyzok",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7819,
                            "src": "2248:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Proof_$8416_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) returns (bool)"
                            }
                          },
                          "id": 7726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2248:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2286:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2248:42:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520736f6c7574696f6e206861736e74206265656e207665726966696564",
                        "id": 7729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2292:34:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b83171baf46fafec6341969945a4cf28607032f60a003b748f9b586f886ba93",
                          "typeString": "literal_string \"The solution hasnt been verified\""
                        },
                        "value": "The solution hasnt been verified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b83171baf46fafec6341969945a4cf28607032f60a003b748f9b586f886ba93",
                          "typeString": "literal_string \"The solution hasnt been verified\""
                        }
                      ],
                      "id": 7721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8977,
                        8978
                      ],
                      "referencedDeclaration": 8978,
                      "src": "2240:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2240:87:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7731,
                  "nodeType": "ExpressionStatement",
                  "src": "2240:87:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7733,
                          "name": "totalSupplyCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7704,
                          "src": "2448:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3131",
                          "id": 7734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2467:2:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_11_by_1",
                            "typeString": "int_const 11"
                          },
                          "value": "11"
                        },
                        "src": "2448:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f74616c20746f6b656e20537570706c792068617320656e646564",
                        "id": 7736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2471:30:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57ba69fc0475f171fcaf751a8ace5f3004936b4f8ae8eb8148bd94c04b64ef0f",
                          "typeString": "literal_string \"Total token Supply has ended\""
                        },
                        "value": "Total token Supply has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57ba69fc0475f171fcaf751a8ace5f3004936b4f8ae8eb8148bd94c04b64ef0f",
                          "typeString": "literal_string \"Total token Supply has ended\""
                        }
                      ],
                      "id": 7732,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8977,
                        8978
                      ],
                      "referencedDeclaration": 8978,
                      "src": "2440:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:62:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7738,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:62:9"
                },
                {
                  "body": {
                    "id": 7779,
                    "nodeType": "Block",
                    "src": "2557:254:9",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 7755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 7750,
                                "name": "zokSolutions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7654,
                                "src": "2570:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_solutions_$7651_storage_$dyn_storage",
                                  "typeString": "struct SolnSquareVerifier.solutions storage ref[] storage ref"
                                }
                              },
                              "id": 7752,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 7751,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7740,
                                "src": "2583:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2570:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_solutions_$7651_storage",
                                "typeString": "struct SolnSquareVerifier.solutions storage ref"
                              }
                            },
                            "id": 7753,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exists",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7648,
                            "src": "2570:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 7754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2596:5:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2570:31:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 7778,
                        "nodeType": "IfStatement",
                        "src": "2567:232:9",
                        "trueBody": {
                          "id": 7777,
                          "nodeType": "Block",
                          "src": "2603:196:9",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7759,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7706,
                                    "src": "2637:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 7760,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7708,
                                    "src": "2644:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 7761,
                                    "name": "tokenURI",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7710,
                                    "src": "2653:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7756,
                                    "name": "ERC721Mintable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1152,
                                    "src": "2617:14:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC721Mintable_$1152_$",
                                      "typeString": "type(contract ERC721Mintable)"
                                    }
                                  },
                                  "id": 7758,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1068,
                                  "src": "2617:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (address,uint256,string memory) returns (uint256)"
                                  }
                                },
                                "id": 7762,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2617:45:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7763,
                              "nodeType": "ExpressionStatement",
                              "src": "2617:45:9"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7767,
                                    "name": "tokenURI",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7710,
                                    "src": "2703:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 7768,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7708,
                                    "src": "2713:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7764,
                                    "name": "ERC721Mintable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1152,
                                    "src": "2676:14:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC721Mintable_$1152_$",
                                      "typeString": "type(contract ERC721Mintable)"
                                    }
                                  },
                                  "id": 7766,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "setTokenURI",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1105,
                                  "src": "2676:26:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (string memory,uint256) returns (string memory)"
                                  }
                                },
                                "id": 7769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2676:45:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 7770,
                              "nodeType": "ExpressionStatement",
                              "src": "2676:45:9"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7772,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7708,
                                    "src": "2750:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 7771,
                                  "name": "NFTminted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7666,
                                  "src": "2740:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 7773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2740:18:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 7774,
                              "nodeType": "EmitStatement",
                              "src": "2735:23:9"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 7775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2779:4:9",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 7720,
                              "id": 7776,
                              "nodeType": "Return",
                              "src": "2772:11:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7743,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7740,
                      "src": "2527:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7744,
                        "name": "zokSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7654,
                        "src": "2531:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_solutions_$7651_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.solutions storage ref[] storage ref"
                        }
                      },
                      "id": 7745,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2531:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2527:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7780,
                  "initializationExpression": {
                    "assignments": [
                      7740
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7740,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 7780,
                        "src": "2513:8:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 7739,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2513:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 7742,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2524:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2513:12:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 7748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2552:3:9",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 7747,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7740,
                        "src": "2552:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 7749,
                    "nodeType": "ExpressionStatement",
                    "src": "2552:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "2509:302:9"
                }
              ]
            },
            "documentation": null,
            "id": 7782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7704,
                  "name": "totalSupplyCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7782,
                  "src": "2083:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7703,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2083:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7706,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 7782,
                  "src": "2108:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2108:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7708,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7782,
                  "src": "2123:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7710,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 7782,
                  "src": "2140:22:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7709,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2140:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7712,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7782,
                  "src": "2164:27:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8416_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7711,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8416,
                    "src": "2164:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8416_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7716,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7782,
                  "src": "2192:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7713,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2192:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7715,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2197:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2192:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2082:131:9"
            },
            "returnParameters": {
              "id": 7720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7719,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7782,
                  "src": "2229:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7718,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2229:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2228:6:9"
            },
            "scope": 7783,
            "src": "2066:773:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7784,
        "src": "536:2307:9"
      }
    ],
    "src": "35:2833:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x8E9f37D924BDe453a2bC6B228Df087DC6400AF73",
      "transactionHash": "0x0c4b131b9ea61ae7c64394e193ea738515571286ae21b7cad3fbf1d1faaf60a8"
    },
    "4447": {
      "events": {},
      "links": {},
      "address": "0x1beE6e8e92954858c81C9Fd4c2cF58Aa0E5D71AB",
      "transactionHash": "0x53b7b68e817cf2d881decc0aa597991a46e2cc246aaffebb4b68dff620ba2a53"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2022-02-15T12:59:05.687Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner\r",
        "params": {
          "operator": "operator address which you want to query the approval of\r",
          "owner": "owner address which you want to query the approval of\r"
        },
        "return": "bool whether the given operator is approved by the given owner\r"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator\r An operator is allowed to transfer all tokens of the sender on their behalf\r",
        "params": {
          "approved": "representing the status of the approval to be set\r",
          "to": "operator address to set the approval\r"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table\r"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract\r Reverts if the index is greater or equal to the total number of tokens\r",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list\r"
        },
        "return": "uint256 token ID at the given index of the tokens list\r"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner\r",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list\r",
          "owner": "address owning the tokens list to be accessed\r"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address\r"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract\r",
        "return": "uint256 representing the total amount of tokens\r"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}